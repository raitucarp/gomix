package pi

import "github.com/raitucarp/gomix/icons"

func PiAcornThin() icons.IsIcon             { return newIcon(thinIcon, "acorn-thin") }
func PiAddressBookTabsThin() icons.IsIcon   { return newIcon(thinIcon, "address-book-tabs-thin") }
func PiAddressBookThin() icons.IsIcon       { return newIcon(thinIcon, "address-book-thin") }
func PiAirTrafficControlThin() icons.IsIcon { return newIcon(thinIcon, "air-traffic-control-thin") }
func PiAirplaneInFlightThin() icons.IsIcon  { return newIcon(thinIcon, "airplane-in-flight-thin") }
func PiAirplaneLandingThin() icons.IsIcon   { return newIcon(thinIcon, "airplane-landing-thin") }
func PiAirplaneTakeoffThin() icons.IsIcon   { return newIcon(thinIcon, "airplane-takeoff-thin") }
func PiAirplaneTaxiingThin() icons.IsIcon   { return newIcon(thinIcon, "airplane-taxiing-thin") }
func PiAirplaneThin() icons.IsIcon          { return newIcon(thinIcon, "airplane-thin") }
func PiAirplaneTiltThin() icons.IsIcon      { return newIcon(thinIcon, "airplane-tilt-thin") }
func PiAirplayThin() icons.IsIcon           { return newIcon(thinIcon, "airplay-thin") }
func PiAlarmThin() icons.IsIcon             { return newIcon(thinIcon, "alarm-thin") }
func PiAlienThin() icons.IsIcon             { return newIcon(thinIcon, "alien-thin") }
func PiAlignBottomSimpleThin() icons.IsIcon { return newIcon(thinIcon, "align-bottom-simple-thin") }
func PiAlignBottomThin() icons.IsIcon       { return newIcon(thinIcon, "align-bottom-thin") }
func PiAlignCenterHorizontalSimpleThin() icons.IsIcon {
	return newIcon(thinIcon, "align-center-horizontal-simple-thin")
}
func PiAlignCenterHorizontalThin() icons.IsIcon {
	return newIcon(thinIcon, "align-center-horizontal-thin")
}
func PiAlignCenterVerticalSimpleThin() icons.IsIcon {
	return newIcon(thinIcon, "align-center-vertical-simple-thin")
}
func PiAlignCenterVerticalThin() icons.IsIcon { return newIcon(thinIcon, "align-center-vertical-thin") }
func PiAlignLeftSimpleThin() icons.IsIcon     { return newIcon(thinIcon, "align-left-simple-thin") }
func PiAlignLeftThin() icons.IsIcon           { return newIcon(thinIcon, "align-left-thin") }
func PiAlignRightSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "align-right-simple-thin") }
func PiAlignRightThin() icons.IsIcon          { return newIcon(thinIcon, "align-right-thin") }
func PiAlignTopSimpleThin() icons.IsIcon      { return newIcon(thinIcon, "align-top-simple-thin") }
func PiAlignTopThin() icons.IsIcon            { return newIcon(thinIcon, "align-top-thin") }
func PiAmazonLogoThin() icons.IsIcon          { return newIcon(thinIcon, "amazon-logo-thin") }
func PiAmbulanceThin() icons.IsIcon           { return newIcon(thinIcon, "ambulance-thin") }
func PiAnchorSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "anchor-simple-thin") }
func PiAnchorThin() icons.IsIcon              { return newIcon(thinIcon, "anchor-thin") }
func PiAndroidLogoThin() icons.IsIcon         { return newIcon(thinIcon, "android-logo-thin") }
func PiAngleThin() icons.IsIcon               { return newIcon(thinIcon, "angle-thin") }
func PiAngularLogoThin() icons.IsIcon         { return newIcon(thinIcon, "angular-logo-thin") }
func PiApertureThin() icons.IsIcon            { return newIcon(thinIcon, "aperture-thin") }
func PiAppStoreLogoThin() icons.IsIcon        { return newIcon(thinIcon, "app-store-logo-thin") }
func PiAppWindowThin() icons.IsIcon           { return newIcon(thinIcon, "app-window-thin") }
func PiAppleLogoThin() icons.IsIcon           { return newIcon(thinIcon, "apple-logo-thin") }
func PiApplePodcastsLogoThin() icons.IsIcon   { return newIcon(thinIcon, "apple-podcasts-logo-thin") }
func PiApproximateEqualsThin() icons.IsIcon   { return newIcon(thinIcon, "approximate-equals-thin") }
func PiArchiveThin() icons.IsIcon             { return newIcon(thinIcon, "archive-thin") }
func PiArmchairThin() icons.IsIcon            { return newIcon(thinIcon, "armchair-thin") }
func PiArrowArcLeftThin() icons.IsIcon        { return newIcon(thinIcon, "arrow-arc-left-thin") }
func PiArrowArcRightThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-arc-right-thin") }
func PiArrowBendDoubleUpLeftThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-bend-double-up-left-thin")
}
func PiArrowBendDoubleUpRightThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-bend-double-up-right-thin")
}
func PiArrowBendDownLeftThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-bend-down-left-thin") }
func PiArrowBendDownRightThin() icons.IsIcon { return newIcon(thinIcon, "arrow-bend-down-right-thin") }
func PiArrowBendLeftDownThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-bend-left-down-thin") }
func PiArrowBendLeftUpThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-bend-left-up-thin") }
func PiArrowBendRightDownThin() icons.IsIcon { return newIcon(thinIcon, "arrow-bend-right-down-thin") }
func PiArrowBendRightUpThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-bend-right-up-thin") }
func PiArrowBendUpLeftThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-bend-up-left-thin") }
func PiArrowBendUpRightThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-bend-up-right-thin") }
func PiArrowCircleDownLeftThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-circle-down-left-thin")
}
func PiArrowCircleDownRightThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-circle-down-right-thin")
}
func PiArrowCircleDownThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-circle-down-thin") }
func PiArrowCircleLeftThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-circle-left-thin") }
func PiArrowCircleRightThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-circle-right-thin") }
func PiArrowCircleUpLeftThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-circle-up-left-thin") }
func PiArrowCircleUpRightThin() icons.IsIcon { return newIcon(thinIcon, "arrow-circle-up-right-thin") }
func PiArrowCircleUpThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-circle-up-thin") }
func PiArrowClockwiseThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-clockwise-thin") }
func PiArrowCounterClockwiseThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-counter-clockwise-thin")
}
func PiArrowDownLeftThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-down-left-thin") }
func PiArrowDownRightThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-down-right-thin") }
func PiArrowDownThin() icons.IsIcon          { return newIcon(thinIcon, "arrow-down-thin") }
func PiArrowElbowDownLeftThin() icons.IsIcon { return newIcon(thinIcon, "arrow-elbow-down-left-thin") }
func PiArrowElbowDownRightThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-elbow-down-right-thin")
}
func PiArrowElbowLeftDownThin() icons.IsIcon { return newIcon(thinIcon, "arrow-elbow-left-down-thin") }
func PiArrowElbowLeftThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-elbow-left-thin") }
func PiArrowElbowLeftUpThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-elbow-left-up-thin") }
func PiArrowElbowRightDownThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-elbow-right-down-thin")
}
func PiArrowElbowRightThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-elbow-right-thin") }
func PiArrowElbowRightUpThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-elbow-right-up-thin") }
func PiArrowElbowUpLeftThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-elbow-up-left-thin") }
func PiArrowElbowUpRightThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-elbow-up-right-thin") }
func PiArrowFatDownThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-fat-down-thin") }
func PiArrowFatLeftThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-fat-left-thin") }
func PiArrowFatLineDownThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-fat-line-down-thin") }
func PiArrowFatLineLeftThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-fat-line-left-thin") }
func PiArrowFatLineRightThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-fat-line-right-thin") }
func PiArrowFatLineUpThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-fat-line-up-thin") }
func PiArrowFatLinesDownThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-fat-lines-down-thin") }
func PiArrowFatLinesLeftThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-fat-lines-left-thin") }
func PiArrowFatLinesRightThin() icons.IsIcon { return newIcon(thinIcon, "arrow-fat-lines-right-thin") }
func PiArrowFatLinesUpThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-fat-lines-up-thin") }
func PiArrowFatRightThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-fat-right-thin") }
func PiArrowFatUpThin() icons.IsIcon         { return newIcon(thinIcon, "arrow-fat-up-thin") }
func PiArrowLeftThin() icons.IsIcon          { return newIcon(thinIcon, "arrow-left-thin") }
func PiArrowLineDownLeftThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-line-down-left-thin") }
func PiArrowLineDownRightThin() icons.IsIcon { return newIcon(thinIcon, "arrow-line-down-right-thin") }
func PiArrowLineDownThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-line-down-thin") }
func PiArrowLineLeftThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-line-left-thin") }
func PiArrowLineRightThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-line-right-thin") }
func PiArrowLineUpLeftThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-line-up-left-thin") }
func PiArrowLineUpRightThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-line-up-right-thin") }
func PiArrowLineUpThin() icons.IsIcon        { return newIcon(thinIcon, "arrow-line-up-thin") }
func PiArrowRightThin() icons.IsIcon         { return newIcon(thinIcon, "arrow-right-thin") }
func PiArrowSquareDownLeftThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-square-down-left-thin")
}
func PiArrowSquareDownRightThin() icons.IsIcon {
	return newIcon(thinIcon, "arrow-square-down-right-thin")
}
func PiArrowSquareDownThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-square-down-thin") }
func PiArrowSquareInThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-square-in-thin") }
func PiArrowSquareLeftThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-square-left-thin") }
func PiArrowSquareOutThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-square-out-thin") }
func PiArrowSquareRightThin() icons.IsIcon   { return newIcon(thinIcon, "arrow-square-right-thin") }
func PiArrowSquareUpLeftThin() icons.IsIcon  { return newIcon(thinIcon, "arrow-square-up-left-thin") }
func PiArrowSquareUpRightThin() icons.IsIcon { return newIcon(thinIcon, "arrow-square-up-right-thin") }
func PiArrowSquareUpThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-square-up-thin") }
func PiArrowUDownLeftThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-u-down-left-thin") }
func PiArrowUDownRightThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-u-down-right-thin") }
func PiArrowULeftDownThin() icons.IsIcon     { return newIcon(thinIcon, "arrow-u-left-down-thin") }
func PiArrowULeftUpThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-u-left-up-thin") }
func PiArrowURightDownThin() icons.IsIcon    { return newIcon(thinIcon, "arrow-u-right-down-thin") }
func PiArrowURightUpThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-u-right-up-thin") }
func PiArrowUUpLeftThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-u-up-left-thin") }
func PiArrowUUpRightThin() icons.IsIcon      { return newIcon(thinIcon, "arrow-u-up-right-thin") }
func PiArrowUpLeftThin() icons.IsIcon        { return newIcon(thinIcon, "arrow-up-left-thin") }
func PiArrowUpRightThin() icons.IsIcon       { return newIcon(thinIcon, "arrow-up-right-thin") }
func PiArrowUpThin() icons.IsIcon            { return newIcon(thinIcon, "arrow-up-thin") }
func PiArrowsClockwiseThin() icons.IsIcon    { return newIcon(thinIcon, "arrows-clockwise-thin") }
func PiArrowsCounterClockwiseThin() icons.IsIcon {
	return newIcon(thinIcon, "arrows-counter-clockwise-thin")
}
func PiArrowsDownUpThin() icons.IsIcon     { return newIcon(thinIcon, "arrows-down-up-thin") }
func PiArrowsHorizontalThin() icons.IsIcon { return newIcon(thinIcon, "arrows-horizontal-thin") }
func PiArrowsInCardinalThin() icons.IsIcon { return newIcon(thinIcon, "arrows-in-cardinal-thin") }
func PiArrowsInLineHorizontalThin() icons.IsIcon {
	return newIcon(thinIcon, "arrows-in-line-horizontal-thin")
}
func PiArrowsInLineVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "arrows-in-line-vertical-thin")
}
func PiArrowsInSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "arrows-in-simple-thin") }
func PiArrowsInThin() icons.IsIcon          { return newIcon(thinIcon, "arrows-in-thin") }
func PiArrowsLeftRightThin() icons.IsIcon   { return newIcon(thinIcon, "arrows-left-right-thin") }
func PiArrowsMergeThin() icons.IsIcon       { return newIcon(thinIcon, "arrows-merge-thin") }
func PiArrowsOutCardinalThin() icons.IsIcon { return newIcon(thinIcon, "arrows-out-cardinal-thin") }
func PiArrowsOutLineHorizontalThin() icons.IsIcon {
	return newIcon(thinIcon, "arrows-out-line-horizontal-thin")
}
func PiArrowsOutLineVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "arrows-out-line-vertical-thin")
}
func PiArrowsOutSimpleThin() icons.IsIcon { return newIcon(thinIcon, "arrows-out-simple-thin") }
func PiArrowsOutThin() icons.IsIcon       { return newIcon(thinIcon, "arrows-out-thin") }
func PiArrowsSplitThin() icons.IsIcon     { return newIcon(thinIcon, "arrows-split-thin") }
func PiArrowsVerticalThin() icons.IsIcon  { return newIcon(thinIcon, "arrows-vertical-thin") }
func PiArticleMediumThin() icons.IsIcon   { return newIcon(thinIcon, "article-medium-thin") }
func PiArticleNyTimesThin() icons.IsIcon  { return newIcon(thinIcon, "article-ny-times-thin") }
func PiArticleThin() icons.IsIcon         { return newIcon(thinIcon, "article-thin") }
func PiAsclepiusThin() icons.IsIcon       { return newIcon(thinIcon, "asclepius-thin") }
func PiAsteriskSimpleThin() icons.IsIcon  { return newIcon(thinIcon, "asterisk-simple-thin") }
func PiAsteriskThin() icons.IsIcon        { return newIcon(thinIcon, "asterisk-thin") }
func PiAtThin() icons.IsIcon              { return newIcon(thinIcon, "at-thin") }
func PiAtomThin() icons.IsIcon            { return newIcon(thinIcon, "atom-thin") }
func PiAvocadoThin() icons.IsIcon         { return newIcon(thinIcon, "avocado-thin") }
func PiAxeThin() icons.IsIcon             { return newIcon(thinIcon, "axe-thin") }
func PiBabyCarriageThin() icons.IsIcon    { return newIcon(thinIcon, "baby-carriage-thin") }
func PiBabyThin() icons.IsIcon            { return newIcon(thinIcon, "baby-thin") }
func PiBackpackThin() icons.IsIcon        { return newIcon(thinIcon, "backpack-thin") }
func PiBackspaceThin() icons.IsIcon       { return newIcon(thinIcon, "backspace-thin") }
func PiBagSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "bag-simple-thin") }
func PiBagThin() icons.IsIcon             { return newIcon(thinIcon, "bag-thin") }
func PiBalloonThin() icons.IsIcon         { return newIcon(thinIcon, "balloon-thin") }
func PiBandaidsThin() icons.IsIcon        { return newIcon(thinIcon, "bandaids-thin") }
func PiBankThin() icons.IsIcon            { return newIcon(thinIcon, "bank-thin") }
func PiBarbellThin() icons.IsIcon         { return newIcon(thinIcon, "barbell-thin") }
func PiBarcodeThin() icons.IsIcon         { return newIcon(thinIcon, "barcode-thin") }
func PiBarnThin() icons.IsIcon            { return newIcon(thinIcon, "barn-thin") }
func PiBarricadeThin() icons.IsIcon       { return newIcon(thinIcon, "barricade-thin") }
func PiBaseballCapThin() icons.IsIcon     { return newIcon(thinIcon, "baseball-cap-thin") }
func PiBaseballHelmetThin() icons.IsIcon  { return newIcon(thinIcon, "baseball-helmet-thin") }
func PiBaseballThin() icons.IsIcon        { return newIcon(thinIcon, "baseball-thin") }
func PiBasketThin() icons.IsIcon          { return newIcon(thinIcon, "basket-thin") }
func PiBasketballThin() icons.IsIcon      { return newIcon(thinIcon, "basketball-thin") }
func PiBathtubThin() icons.IsIcon         { return newIcon(thinIcon, "bathtub-thin") }
func PiBatteryChargingThin() icons.IsIcon { return newIcon(thinIcon, "battery-charging-thin") }
func PiBatteryChargingVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "battery-charging-vertical-thin")
}
func PiBatteryEmptyThin() icons.IsIcon        { return newIcon(thinIcon, "battery-empty-thin") }
func PiBatteryFullThin() icons.IsIcon         { return newIcon(thinIcon, "battery-full-thin") }
func PiBatteryHighThin() icons.IsIcon         { return newIcon(thinIcon, "battery-high-thin") }
func PiBatteryLowThin() icons.IsIcon          { return newIcon(thinIcon, "battery-low-thin") }
func PiBatteryMediumThin() icons.IsIcon       { return newIcon(thinIcon, "battery-medium-thin") }
func PiBatteryPlusThin() icons.IsIcon         { return newIcon(thinIcon, "battery-plus-thin") }
func PiBatteryPlusVerticalThin() icons.IsIcon { return newIcon(thinIcon, "battery-plus-vertical-thin") }
func PiBatteryVerticalEmptyThin() icons.IsIcon {
	return newIcon(thinIcon, "battery-vertical-empty-thin")
}
func PiBatteryVerticalFullThin() icons.IsIcon { return newIcon(thinIcon, "battery-vertical-full-thin") }
func PiBatteryVerticalHighThin() icons.IsIcon { return newIcon(thinIcon, "battery-vertical-high-thin") }
func PiBatteryVerticalLowThin() icons.IsIcon  { return newIcon(thinIcon, "battery-vertical-low-thin") }
func PiBatteryVerticalMediumThin() icons.IsIcon {
	return newIcon(thinIcon, "battery-vertical-medium-thin")
}
func PiBatteryWarningThin() icons.IsIcon { return newIcon(thinIcon, "battery-warning-thin") }
func PiBatteryWarningVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "battery-warning-vertical-thin")
}
func PiBeachBallThin() icons.IsIcon          { return newIcon(thinIcon, "beach-ball-thin") }
func PiBeanieThin() icons.IsIcon             { return newIcon(thinIcon, "beanie-thin") }
func PiBedThin() icons.IsIcon                { return newIcon(thinIcon, "bed-thin") }
func PiBeerBottleThin() icons.IsIcon         { return newIcon(thinIcon, "beer-bottle-thin") }
func PiBeerSteinThin() icons.IsIcon          { return newIcon(thinIcon, "beer-stein-thin") }
func PiBehanceLogoThin() icons.IsIcon        { return newIcon(thinIcon, "behance-logo-thin") }
func PiBellRingingThin() icons.IsIcon        { return newIcon(thinIcon, "bell-ringing-thin") }
func PiBellSimpleRingingThin() icons.IsIcon  { return newIcon(thinIcon, "bell-simple-ringing-thin") }
func PiBellSimpleSlashThin() icons.IsIcon    { return newIcon(thinIcon, "bell-simple-slash-thin") }
func PiBellSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "bell-simple-thin") }
func PiBellSimpleZThin() icons.IsIcon        { return newIcon(thinIcon, "bell-simple-z-thin") }
func PiBellSlashThin() icons.IsIcon          { return newIcon(thinIcon, "bell-slash-thin") }
func PiBellThin() icons.IsIcon               { return newIcon(thinIcon, "bell-thin") }
func PiBellZThin() icons.IsIcon              { return newIcon(thinIcon, "bell-z-thin") }
func PiBeltThin() icons.IsIcon               { return newIcon(thinIcon, "belt-thin") }
func PiBezierCurveThin() icons.IsIcon        { return newIcon(thinIcon, "bezier-curve-thin") }
func PiBicycleThin() icons.IsIcon            { return newIcon(thinIcon, "bicycle-thin") }
func PiBinaryThin() icons.IsIcon             { return newIcon(thinIcon, "binary-thin") }
func PiBinocularsThin() icons.IsIcon         { return newIcon(thinIcon, "binoculars-thin") }
func PiBiohazardThin() icons.IsIcon          { return newIcon(thinIcon, "biohazard-thin") }
func PiBirdThin() icons.IsIcon               { return newIcon(thinIcon, "bird-thin") }
func PiBlueprintThin() icons.IsIcon          { return newIcon(thinIcon, "blueprint-thin") }
func PiBluetoothConnectedThin() icons.IsIcon { return newIcon(thinIcon, "bluetooth-connected-thin") }
func PiBluetoothSlashThin() icons.IsIcon     { return newIcon(thinIcon, "bluetooth-slash-thin") }
func PiBluetoothThin() icons.IsIcon          { return newIcon(thinIcon, "bluetooth-thin") }
func PiBluetoothXThin() icons.IsIcon         { return newIcon(thinIcon, "bluetooth-x-thin") }
func PiBoatThin() icons.IsIcon               { return newIcon(thinIcon, "boat-thin") }
func PiBombThin() icons.IsIcon               { return newIcon(thinIcon, "bomb-thin") }
func PiBoneThin() icons.IsIcon               { return newIcon(thinIcon, "bone-thin") }
func PiBookBookmarkThin() icons.IsIcon       { return newIcon(thinIcon, "book-bookmark-thin") }
func PiBookOpenTextThin() icons.IsIcon       { return newIcon(thinIcon, "book-open-text-thin") }
func PiBookOpenThin() icons.IsIcon           { return newIcon(thinIcon, "book-open-thin") }
func PiBookOpenUserThin() icons.IsIcon       { return newIcon(thinIcon, "book-open-user-thin") }
func PiBookThin() icons.IsIcon               { return newIcon(thinIcon, "book-thin") }
func PiBookmarkSimpleThin() icons.IsIcon     { return newIcon(thinIcon, "bookmark-simple-thin") }
func PiBookmarkThin() icons.IsIcon           { return newIcon(thinIcon, "bookmark-thin") }
func PiBookmarksSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "bookmarks-simple-thin") }
func PiBookmarksThin() icons.IsIcon          { return newIcon(thinIcon, "bookmarks-thin") }
func PiBooksThin() icons.IsIcon              { return newIcon(thinIcon, "books-thin") }
func PiBootThin() icons.IsIcon               { return newIcon(thinIcon, "boot-thin") }
func PiBoulesThin() icons.IsIcon             { return newIcon(thinIcon, "boules-thin") }
func PiBoundingBoxThin() icons.IsIcon        { return newIcon(thinIcon, "bounding-box-thin") }
func PiBowlFoodThin() icons.IsIcon           { return newIcon(thinIcon, "bowl-food-thin") }
func PiBowlSteamThin() icons.IsIcon          { return newIcon(thinIcon, "bowl-steam-thin") }
func PiBowlingBallThin() icons.IsIcon        { return newIcon(thinIcon, "bowling-ball-thin") }
func PiBoxArrowDownThin() icons.IsIcon       { return newIcon(thinIcon, "box-arrow-down-thin") }
func PiBoxArrowUpThin() icons.IsIcon         { return newIcon(thinIcon, "box-arrow-up-thin") }
func PiBoxingGloveThin() icons.IsIcon        { return newIcon(thinIcon, "boxing-glove-thin") }
func PiBracketsAngleThin() icons.IsIcon      { return newIcon(thinIcon, "brackets-angle-thin") }
func PiBracketsCurlyThin() icons.IsIcon      { return newIcon(thinIcon, "brackets-curly-thin") }
func PiBracketsRoundThin() icons.IsIcon      { return newIcon(thinIcon, "brackets-round-thin") }
func PiBracketsSquareThin() icons.IsIcon     { return newIcon(thinIcon, "brackets-square-thin") }
func PiBrainThin() icons.IsIcon              { return newIcon(thinIcon, "brain-thin") }
func PiBrandyThin() icons.IsIcon             { return newIcon(thinIcon, "brandy-thin") }
func PiBreadThin() icons.IsIcon              { return newIcon(thinIcon, "bread-thin") }
func PiBridgeThin() icons.IsIcon             { return newIcon(thinIcon, "bridge-thin") }
func PiBriefcaseMetalThin() icons.IsIcon     { return newIcon(thinIcon, "briefcase-metal-thin") }
func PiBriefcaseThin() icons.IsIcon          { return newIcon(thinIcon, "briefcase-thin") }
func PiBroadcastThin() icons.IsIcon          { return newIcon(thinIcon, "broadcast-thin") }
func PiBroomThin() icons.IsIcon              { return newIcon(thinIcon, "broom-thin") }
func PiBrowserThin() icons.IsIcon            { return newIcon(thinIcon, "browser-thin") }
func PiBrowsersThin() icons.IsIcon           { return newIcon(thinIcon, "browsers-thin") }
func PiBugBeetleThin() icons.IsIcon          { return newIcon(thinIcon, "bug-beetle-thin") }
func PiBugDroidThin() icons.IsIcon           { return newIcon(thinIcon, "bug-droid-thin") }
func PiBugThin() icons.IsIcon                { return newIcon(thinIcon, "bug-thin") }
func PiBuildingApartmentThin() icons.IsIcon  { return newIcon(thinIcon, "building-apartment-thin") }
func PiBuildingOfficeThin() icons.IsIcon     { return newIcon(thinIcon, "building-office-thin") }
func PiBuildingThin() icons.IsIcon           { return newIcon(thinIcon, "building-thin") }
func PiBuildingsThin() icons.IsIcon          { return newIcon(thinIcon, "buildings-thin") }
func PiBulldozerThin() icons.IsIcon          { return newIcon(thinIcon, "bulldozer-thin") }
func PiBusThin() icons.IsIcon                { return newIcon(thinIcon, "bus-thin") }
func PiButterflyThin() icons.IsIcon          { return newIcon(thinIcon, "butterfly-thin") }
func PiCableCarThin() icons.IsIcon           { return newIcon(thinIcon, "cable-car-thin") }
func PiCactusThin() icons.IsIcon             { return newIcon(thinIcon, "cactus-thin") }
func PiCakeThin() icons.IsIcon               { return newIcon(thinIcon, "cake-thin") }
func PiCalculatorThin() icons.IsIcon         { return newIcon(thinIcon, "calculator-thin") }
func PiCalendarBlankThin() icons.IsIcon      { return newIcon(thinIcon, "calendar-blank-thin") }
func PiCalendarCheckThin() icons.IsIcon      { return newIcon(thinIcon, "calendar-check-thin") }
func PiCalendarDotThin() icons.IsIcon        { return newIcon(thinIcon, "calendar-dot-thin") }
func PiCalendarDotsThin() icons.IsIcon       { return newIcon(thinIcon, "calendar-dots-thin") }
func PiCalendarHeartThin() icons.IsIcon      { return newIcon(thinIcon, "calendar-heart-thin") }
func PiCalendarMinusThin() icons.IsIcon      { return newIcon(thinIcon, "calendar-minus-thin") }
func PiCalendarPlusThin() icons.IsIcon       { return newIcon(thinIcon, "calendar-plus-thin") }
func PiCalendarSlashThin() icons.IsIcon      { return newIcon(thinIcon, "calendar-slash-thin") }
func PiCalendarStarThin() icons.IsIcon       { return newIcon(thinIcon, "calendar-star-thin") }
func PiCalendarThin() icons.IsIcon           { return newIcon(thinIcon, "calendar-thin") }
func PiCalendarXThin() icons.IsIcon          { return newIcon(thinIcon, "calendar-x-thin") }
func PiCallBellThin() icons.IsIcon           { return newIcon(thinIcon, "call-bell-thin") }
func PiCameraPlusThin() icons.IsIcon         { return newIcon(thinIcon, "camera-plus-thin") }
func PiCameraRotateThin() icons.IsIcon       { return newIcon(thinIcon, "camera-rotate-thin") }
func PiCameraSlashThin() icons.IsIcon        { return newIcon(thinIcon, "camera-slash-thin") }
func PiCameraThin() icons.IsIcon             { return newIcon(thinIcon, "camera-thin") }
func PiCampfireThin() icons.IsIcon           { return newIcon(thinIcon, "campfire-thin") }
func PiCarBatteryThin() icons.IsIcon         { return newIcon(thinIcon, "car-battery-thin") }
func PiCarProfileThin() icons.IsIcon         { return newIcon(thinIcon, "car-profile-thin") }
func PiCarSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "car-simple-thin") }
func PiCarThin() icons.IsIcon                { return newIcon(thinIcon, "car-thin") }
func PiCardholderThin() icons.IsIcon         { return newIcon(thinIcon, "cardholder-thin") }
func PiCardsThin() icons.IsIcon              { return newIcon(thinIcon, "cards-thin") }
func PiCardsThreeThin() icons.IsIcon         { return newIcon(thinIcon, "cards-three-thin") }
func PiCaretCircleDoubleDownThin() icons.IsIcon {
	return newIcon(thinIcon, "caret-circle-double-down-thin")
}
func PiCaretCircleDoubleLeftThin() icons.IsIcon {
	return newIcon(thinIcon, "caret-circle-double-left-thin")
}
func PiCaretCircleDoubleRightThin() icons.IsIcon {
	return newIcon(thinIcon, "caret-circle-double-right-thin")
}
func PiCaretCircleDoubleUpThin() icons.IsIcon {
	return newIcon(thinIcon, "caret-circle-double-up-thin")
}
func PiCaretCircleDownThin() icons.IsIcon    { return newIcon(thinIcon, "caret-circle-down-thin") }
func PiCaretCircleLeftThin() icons.IsIcon    { return newIcon(thinIcon, "caret-circle-left-thin") }
func PiCaretCircleRightThin() icons.IsIcon   { return newIcon(thinIcon, "caret-circle-right-thin") }
func PiCaretCircleUpDownThin() icons.IsIcon  { return newIcon(thinIcon, "caret-circle-up-down-thin") }
func PiCaretCircleUpThin() icons.IsIcon      { return newIcon(thinIcon, "caret-circle-up-thin") }
func PiCaretDoubleDownThin() icons.IsIcon    { return newIcon(thinIcon, "caret-double-down-thin") }
func PiCaretDoubleLeftThin() icons.IsIcon    { return newIcon(thinIcon, "caret-double-left-thin") }
func PiCaretDoubleRightThin() icons.IsIcon   { return newIcon(thinIcon, "caret-double-right-thin") }
func PiCaretDoubleUpThin() icons.IsIcon      { return newIcon(thinIcon, "caret-double-up-thin") }
func PiCaretDownThin() icons.IsIcon          { return newIcon(thinIcon, "caret-down-thin") }
func PiCaretLeftThin() icons.IsIcon          { return newIcon(thinIcon, "caret-left-thin") }
func PiCaretLineDownThin() icons.IsIcon      { return newIcon(thinIcon, "caret-line-down-thin") }
func PiCaretLineLeftThin() icons.IsIcon      { return newIcon(thinIcon, "caret-line-left-thin") }
func PiCaretLineRightThin() icons.IsIcon     { return newIcon(thinIcon, "caret-line-right-thin") }
func PiCaretLineUpThin() icons.IsIcon        { return newIcon(thinIcon, "caret-line-up-thin") }
func PiCaretRightThin() icons.IsIcon         { return newIcon(thinIcon, "caret-right-thin") }
func PiCaretUpDownThin() icons.IsIcon        { return newIcon(thinIcon, "caret-up-down-thin") }
func PiCaretUpThin() icons.IsIcon            { return newIcon(thinIcon, "caret-up-thin") }
func PiCarrotThin() icons.IsIcon             { return newIcon(thinIcon, "carrot-thin") }
func PiCashRegisterThin() icons.IsIcon       { return newIcon(thinIcon, "cash-register-thin") }
func PiCassetteTapeThin() icons.IsIcon       { return newIcon(thinIcon, "cassette-tape-thin") }
func PiCastleTurretThin() icons.IsIcon       { return newIcon(thinIcon, "castle-turret-thin") }
func PiCatThin() icons.IsIcon                { return newIcon(thinIcon, "cat-thin") }
func PiCellSignalFullThin() icons.IsIcon     { return newIcon(thinIcon, "cell-signal-full-thin") }
func PiCellSignalHighThin() icons.IsIcon     { return newIcon(thinIcon, "cell-signal-high-thin") }
func PiCellSignalLowThin() icons.IsIcon      { return newIcon(thinIcon, "cell-signal-low-thin") }
func PiCellSignalMediumThin() icons.IsIcon   { return newIcon(thinIcon, "cell-signal-medium-thin") }
func PiCellSignalNoneThin() icons.IsIcon     { return newIcon(thinIcon, "cell-signal-none-thin") }
func PiCellSignalSlashThin() icons.IsIcon    { return newIcon(thinIcon, "cell-signal-slash-thin") }
func PiCellSignalXThin() icons.IsIcon        { return newIcon(thinIcon, "cell-signal-x-thin") }
func PiCellTowerThin() icons.IsIcon          { return newIcon(thinIcon, "cell-tower-thin") }
func PiCertificateThin() icons.IsIcon        { return newIcon(thinIcon, "certificate-thin") }
func PiChairThin() icons.IsIcon              { return newIcon(thinIcon, "chair-thin") }
func PiChalkboardSimpleThin() icons.IsIcon   { return newIcon(thinIcon, "chalkboard-simple-thin") }
func PiChalkboardTeacherThin() icons.IsIcon  { return newIcon(thinIcon, "chalkboard-teacher-thin") }
func PiChalkboardThin() icons.IsIcon         { return newIcon(thinIcon, "chalkboard-thin") }
func PiChampagneThin() icons.IsIcon          { return newIcon(thinIcon, "champagne-thin") }
func PiChargingStationThin() icons.IsIcon    { return newIcon(thinIcon, "charging-station-thin") }
func PiChartBarHorizontalThin() icons.IsIcon { return newIcon(thinIcon, "chart-bar-horizontal-thin") }
func PiChartBarThin() icons.IsIcon           { return newIcon(thinIcon, "chart-bar-thin") }
func PiChartDonutThin() icons.IsIcon         { return newIcon(thinIcon, "chart-donut-thin") }
func PiChartLineDownThin() icons.IsIcon      { return newIcon(thinIcon, "chart-line-down-thin") }
func PiChartLineThin() icons.IsIcon          { return newIcon(thinIcon, "chart-line-thin") }
func PiChartLineUpThin() icons.IsIcon        { return newIcon(thinIcon, "chart-line-up-thin") }
func PiChartPieSliceThin() icons.IsIcon      { return newIcon(thinIcon, "chart-pie-slice-thin") }
func PiChartPieThin() icons.IsIcon           { return newIcon(thinIcon, "chart-pie-thin") }
func PiChartPolarThin() icons.IsIcon         { return newIcon(thinIcon, "chart-polar-thin") }
func PiChartScatterThin() icons.IsIcon       { return newIcon(thinIcon, "chart-scatter-thin") }
func PiChatCenteredDotsThin() icons.IsIcon   { return newIcon(thinIcon, "chat-centered-dots-thin") }
func PiChatCenteredSlashThin() icons.IsIcon  { return newIcon(thinIcon, "chat-centered-slash-thin") }
func PiChatCenteredTextThin() icons.IsIcon   { return newIcon(thinIcon, "chat-centered-text-thin") }
func PiChatCenteredThin() icons.IsIcon       { return newIcon(thinIcon, "chat-centered-thin") }
func PiChatCircleDotsThin() icons.IsIcon     { return newIcon(thinIcon, "chat-circle-dots-thin") }
func PiChatCircleSlashThin() icons.IsIcon    { return newIcon(thinIcon, "chat-circle-slash-thin") }
func PiChatCircleTextThin() icons.IsIcon     { return newIcon(thinIcon, "chat-circle-text-thin") }
func PiChatCircleThin() icons.IsIcon         { return newIcon(thinIcon, "chat-circle-thin") }
func PiChatDotsThin() icons.IsIcon           { return newIcon(thinIcon, "chat-dots-thin") }
func PiChatSlashThin() icons.IsIcon          { return newIcon(thinIcon, "chat-slash-thin") }
func PiChatTeardropDotsThin() icons.IsIcon   { return newIcon(thinIcon, "chat-teardrop-dots-thin") }
func PiChatTeardropSlashThin() icons.IsIcon  { return newIcon(thinIcon, "chat-teardrop-slash-thin") }
func PiChatTeardropTextThin() icons.IsIcon   { return newIcon(thinIcon, "chat-teardrop-text-thin") }
func PiChatTeardropThin() icons.IsIcon       { return newIcon(thinIcon, "chat-teardrop-thin") }
func PiChatTextThin() icons.IsIcon           { return newIcon(thinIcon, "chat-text-thin") }
func PiChatThin() icons.IsIcon               { return newIcon(thinIcon, "chat-thin") }
func PiChatsCircleThin() icons.IsIcon        { return newIcon(thinIcon, "chats-circle-thin") }
func PiChatsTeardropThin() icons.IsIcon      { return newIcon(thinIcon, "chats-teardrop-thin") }
func PiChatsThin() icons.IsIcon              { return newIcon(thinIcon, "chats-thin") }
func PiCheckCircleThin() icons.IsIcon        { return newIcon(thinIcon, "check-circle-thin") }
func PiCheckFatThin() icons.IsIcon           { return newIcon(thinIcon, "check-fat-thin") }
func PiCheckSquareOffsetThin() icons.IsIcon  { return newIcon(thinIcon, "check-square-offset-thin") }
func PiCheckSquareThin() icons.IsIcon        { return newIcon(thinIcon, "check-square-thin") }
func PiCheckThin() icons.IsIcon              { return newIcon(thinIcon, "check-thin") }
func PiCheckerboardThin() icons.IsIcon       { return newIcon(thinIcon, "checkerboard-thin") }
func PiChecksThin() icons.IsIcon             { return newIcon(thinIcon, "checks-thin") }
func PiCheersThin() icons.IsIcon             { return newIcon(thinIcon, "cheers-thin") }
func PiCheeseThin() icons.IsIcon             { return newIcon(thinIcon, "cheese-thin") }
func PiChefHatThin() icons.IsIcon            { return newIcon(thinIcon, "chef-hat-thin") }
func PiCherriesThin() icons.IsIcon           { return newIcon(thinIcon, "cherries-thin") }
func PiChurchThin() icons.IsIcon             { return newIcon(thinIcon, "church-thin") }
func PiCigaretteSlashThin() icons.IsIcon     { return newIcon(thinIcon, "cigarette-slash-thin") }
func PiCigaretteThin() icons.IsIcon          { return newIcon(thinIcon, "cigarette-thin") }
func PiCircleDashedThin() icons.IsIcon       { return newIcon(thinIcon, "circle-dashed-thin") }
func PiCircleHalfThin() icons.IsIcon         { return newIcon(thinIcon, "circle-half-thin") }
func PiCircleHalfTiltThin() icons.IsIcon     { return newIcon(thinIcon, "circle-half-tilt-thin") }
func PiCircleNotchThin() icons.IsIcon        { return newIcon(thinIcon, "circle-notch-thin") }
func PiCircleThin() icons.IsIcon             { return newIcon(thinIcon, "circle-thin") }
func PiCirclesFourThin() icons.IsIcon        { return newIcon(thinIcon, "circles-four-thin") }
func PiCirclesThreePlusThin() icons.IsIcon   { return newIcon(thinIcon, "circles-three-plus-thin") }
func PiCirclesThreeThin() icons.IsIcon       { return newIcon(thinIcon, "circles-three-thin") }
func PiCircuitryThin() icons.IsIcon          { return newIcon(thinIcon, "circuitry-thin") }
func PiCityThin() icons.IsIcon               { return newIcon(thinIcon, "city-thin") }
func PiClipboardTextThin() icons.IsIcon      { return newIcon(thinIcon, "clipboard-text-thin") }
func PiClipboardThin() icons.IsIcon          { return newIcon(thinIcon, "clipboard-thin") }
func PiClockAfternoonThin() icons.IsIcon     { return newIcon(thinIcon, "clock-afternoon-thin") }
func PiClockClockwiseThin() icons.IsIcon     { return newIcon(thinIcon, "clock-clockwise-thin") }
func PiClockCountdownThin() icons.IsIcon     { return newIcon(thinIcon, "clock-countdown-thin") }
func PiClockCounterClockwiseThin() icons.IsIcon {
	return newIcon(thinIcon, "clock-counter-clockwise-thin")
}
func PiClockThin() icons.IsIcon              { return newIcon(thinIcon, "clock-thin") }
func PiClockUserThin() icons.IsIcon          { return newIcon(thinIcon, "clock-user-thin") }
func PiClosedCaptioningThin() icons.IsIcon   { return newIcon(thinIcon, "closed-captioning-thin") }
func PiCloudArrowDownThin() icons.IsIcon     { return newIcon(thinIcon, "cloud-arrow-down-thin") }
func PiCloudArrowUpThin() icons.IsIcon       { return newIcon(thinIcon, "cloud-arrow-up-thin") }
func PiCloudCheckThin() icons.IsIcon         { return newIcon(thinIcon, "cloud-check-thin") }
func PiCloudFogThin() icons.IsIcon           { return newIcon(thinIcon, "cloud-fog-thin") }
func PiCloudLightningThin() icons.IsIcon     { return newIcon(thinIcon, "cloud-lightning-thin") }
func PiCloudMoonThin() icons.IsIcon          { return newIcon(thinIcon, "cloud-moon-thin") }
func PiCloudRainThin() icons.IsIcon          { return newIcon(thinIcon, "cloud-rain-thin") }
func PiCloudSlashThin() icons.IsIcon         { return newIcon(thinIcon, "cloud-slash-thin") }
func PiCloudSnowThin() icons.IsIcon          { return newIcon(thinIcon, "cloud-snow-thin") }
func PiCloudSunThin() icons.IsIcon           { return newIcon(thinIcon, "cloud-sun-thin") }
func PiCloudThin() icons.IsIcon              { return newIcon(thinIcon, "cloud-thin") }
func PiCloudWarningThin() icons.IsIcon       { return newIcon(thinIcon, "cloud-warning-thin") }
func PiCloudXThin() icons.IsIcon             { return newIcon(thinIcon, "cloud-x-thin") }
func PiCloverThin() icons.IsIcon             { return newIcon(thinIcon, "clover-thin") }
func PiClubThin() icons.IsIcon               { return newIcon(thinIcon, "club-thin") }
func PiCoatHangerThin() icons.IsIcon         { return newIcon(thinIcon, "coat-hanger-thin") }
func PiCodaLogoThin() icons.IsIcon           { return newIcon(thinIcon, "coda-logo-thin") }
func PiCodeBlockThin() icons.IsIcon          { return newIcon(thinIcon, "code-block-thin") }
func PiCodeSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "code-simple-thin") }
func PiCodeThin() icons.IsIcon               { return newIcon(thinIcon, "code-thin") }
func PiCodepenLogoThin() icons.IsIcon        { return newIcon(thinIcon, "codepen-logo-thin") }
func PiCodesandboxLogoThin() icons.IsIcon    { return newIcon(thinIcon, "codesandbox-logo-thin") }
func PiCoffeeBeanThin() icons.IsIcon         { return newIcon(thinIcon, "coffee-bean-thin") }
func PiCoffeeThin() icons.IsIcon             { return newIcon(thinIcon, "coffee-thin") }
func PiCoinThin() icons.IsIcon               { return newIcon(thinIcon, "coin-thin") }
func PiCoinVerticalThin() icons.IsIcon       { return newIcon(thinIcon, "coin-vertical-thin") }
func PiCoinsThin() icons.IsIcon              { return newIcon(thinIcon, "coins-thin") }
func PiColumnsPlusLeftThin() icons.IsIcon    { return newIcon(thinIcon, "columns-plus-left-thin") }
func PiColumnsPlusRightThin() icons.IsIcon   { return newIcon(thinIcon, "columns-plus-right-thin") }
func PiColumnsThin() icons.IsIcon            { return newIcon(thinIcon, "columns-thin") }
func PiCommandThin() icons.IsIcon            { return newIcon(thinIcon, "command-thin") }
func PiCompassRoseThin() icons.IsIcon        { return newIcon(thinIcon, "compass-rose-thin") }
func PiCompassThin() icons.IsIcon            { return newIcon(thinIcon, "compass-thin") }
func PiCompassToolThin() icons.IsIcon        { return newIcon(thinIcon, "compass-tool-thin") }
func PiComputerTowerThin() icons.IsIcon      { return newIcon(thinIcon, "computer-tower-thin") }
func PiConfettiThin() icons.IsIcon           { return newIcon(thinIcon, "confetti-thin") }
func PiContactlessPaymentThin() icons.IsIcon { return newIcon(thinIcon, "contactless-payment-thin") }
func PiControlThin() icons.IsIcon            { return newIcon(thinIcon, "control-thin") }
func PiCookieThin() icons.IsIcon             { return newIcon(thinIcon, "cookie-thin") }
func PiCookingPotThin() icons.IsIcon         { return newIcon(thinIcon, "cooking-pot-thin") }
func PiCopySimpleThin() icons.IsIcon         { return newIcon(thinIcon, "copy-simple-thin") }
func PiCopyThin() icons.IsIcon               { return newIcon(thinIcon, "copy-thin") }
func PiCopyleftThin() icons.IsIcon           { return newIcon(thinIcon, "copyleft-thin") }
func PiCopyrightThin() icons.IsIcon          { return newIcon(thinIcon, "copyright-thin") }
func PiCornersInThin() icons.IsIcon          { return newIcon(thinIcon, "corners-in-thin") }
func PiCornersOutThin() icons.IsIcon         { return newIcon(thinIcon, "corners-out-thin") }
func PiCouchThin() icons.IsIcon              { return newIcon(thinIcon, "couch-thin") }
func PiCourtBasketballThin() icons.IsIcon    { return newIcon(thinIcon, "court-basketball-thin") }
func PiCowThin() icons.IsIcon                { return newIcon(thinIcon, "cow-thin") }
func PiCowboyHatThin() icons.IsIcon          { return newIcon(thinIcon, "cowboy-hat-thin") }
func PiCpuThin() icons.IsIcon                { return newIcon(thinIcon, "cpu-thin") }
func PiCraneThin() icons.IsIcon              { return newIcon(thinIcon, "crane-thin") }
func PiCraneTowerThin() icons.IsIcon         { return newIcon(thinIcon, "crane-tower-thin") }
func PiCreditCardThin() icons.IsIcon         { return newIcon(thinIcon, "credit-card-thin") }
func PiCricketThin() icons.IsIcon            { return newIcon(thinIcon, "cricket-thin") }
func PiCropThin() icons.IsIcon               { return newIcon(thinIcon, "crop-thin") }
func PiCrossThin() icons.IsIcon              { return newIcon(thinIcon, "cross-thin") }
func PiCrosshairSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "crosshair-simple-thin") }
func PiCrosshairThin() icons.IsIcon          { return newIcon(thinIcon, "crosshair-thin") }
func PiCrownCrossThin() icons.IsIcon         { return newIcon(thinIcon, "crown-cross-thin") }
func PiCrownSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "crown-simple-thin") }
func PiCrownThin() icons.IsIcon              { return newIcon(thinIcon, "crown-thin") }
func PiCubeFocusThin() icons.IsIcon          { return newIcon(thinIcon, "cube-focus-thin") }
func PiCubeThin() icons.IsIcon               { return newIcon(thinIcon, "cube-thin") }
func PiCubeTransparentThin() icons.IsIcon    { return newIcon(thinIcon, "cube-transparent-thin") }
func PiCurrencyBtcThin() icons.IsIcon        { return newIcon(thinIcon, "currency-btc-thin") }
func PiCurrencyCircleDollarThin() icons.IsIcon {
	return newIcon(thinIcon, "currency-circle-dollar-thin")
}
func PiCurrencyCnyThin() icons.IsIcon { return newIcon(thinIcon, "currency-cny-thin") }
func PiCurrencyDollarSimpleThin() icons.IsIcon {
	return newIcon(thinIcon, "currency-dollar-simple-thin")
}
func PiCurrencyDollarThin() icons.IsIcon      { return newIcon(thinIcon, "currency-dollar-thin") }
func PiCurrencyEthThin() icons.IsIcon         { return newIcon(thinIcon, "currency-eth-thin") }
func PiCurrencyEurThin() icons.IsIcon         { return newIcon(thinIcon, "currency-eur-thin") }
func PiCurrencyGbpThin() icons.IsIcon         { return newIcon(thinIcon, "currency-gbp-thin") }
func PiCurrencyInrThin() icons.IsIcon         { return newIcon(thinIcon, "currency-inr-thin") }
func PiCurrencyJpyThin() icons.IsIcon         { return newIcon(thinIcon, "currency-jpy-thin") }
func PiCurrencyKrwThin() icons.IsIcon         { return newIcon(thinIcon, "currency-krw-thin") }
func PiCurrencyKztThin() icons.IsIcon         { return newIcon(thinIcon, "currency-kzt-thin") }
func PiCurrencyNgnThin() icons.IsIcon         { return newIcon(thinIcon, "currency-ngn-thin") }
func PiCurrencyRubThin() icons.IsIcon         { return newIcon(thinIcon, "currency-rub-thin") }
func PiCursorClickThin() icons.IsIcon         { return newIcon(thinIcon, "cursor-click-thin") }
func PiCursorTextThin() icons.IsIcon          { return newIcon(thinIcon, "cursor-text-thin") }
func PiCursorThin() icons.IsIcon              { return newIcon(thinIcon, "cursor-thin") }
func PiCylinderThin() icons.IsIcon            { return newIcon(thinIcon, "cylinder-thin") }
func PiDatabaseThin() icons.IsIcon            { return newIcon(thinIcon, "database-thin") }
func PiDeskThin() icons.IsIcon                { return newIcon(thinIcon, "desk-thin") }
func PiDesktopThin() icons.IsIcon             { return newIcon(thinIcon, "desktop-thin") }
func PiDesktopTowerThin() icons.IsIcon        { return newIcon(thinIcon, "desktop-tower-thin") }
func PiDetectiveThin() icons.IsIcon           { return newIcon(thinIcon, "detective-thin") }
func PiDevToLogoThin() icons.IsIcon           { return newIcon(thinIcon, "dev-to-logo-thin") }
func PiDeviceMobileCameraThin() icons.IsIcon  { return newIcon(thinIcon, "device-mobile-camera-thin") }
func PiDeviceMobileSlashThin() icons.IsIcon   { return newIcon(thinIcon, "device-mobile-slash-thin") }
func PiDeviceMobileSpeakerThin() icons.IsIcon { return newIcon(thinIcon, "device-mobile-speaker-thin") }
func PiDeviceMobileThin() icons.IsIcon        { return newIcon(thinIcon, "device-mobile-thin") }
func PiDeviceRotateThin() icons.IsIcon        { return newIcon(thinIcon, "device-rotate-thin") }
func PiDeviceTabletCameraThin() icons.IsIcon  { return newIcon(thinIcon, "device-tablet-camera-thin") }
func PiDeviceTabletSpeakerThin() icons.IsIcon { return newIcon(thinIcon, "device-tablet-speaker-thin") }
func PiDeviceTabletThin() icons.IsIcon        { return newIcon(thinIcon, "device-tablet-thin") }
func PiDevicesThin() icons.IsIcon             { return newIcon(thinIcon, "devices-thin") }
func PiDiamondThin() icons.IsIcon             { return newIcon(thinIcon, "diamond-thin") }
func PiDiamondsFourThin() icons.IsIcon        { return newIcon(thinIcon, "diamonds-four-thin") }
func PiDiceFiveThin() icons.IsIcon            { return newIcon(thinIcon, "dice-five-thin") }
func PiDiceFourThin() icons.IsIcon            { return newIcon(thinIcon, "dice-four-thin") }
func PiDiceOneThin() icons.IsIcon             { return newIcon(thinIcon, "dice-one-thin") }
func PiDiceSixThin() icons.IsIcon             { return newIcon(thinIcon, "dice-six-thin") }
func PiDiceThreeThin() icons.IsIcon           { return newIcon(thinIcon, "dice-three-thin") }
func PiDiceTwoThin() icons.IsIcon             { return newIcon(thinIcon, "dice-two-thin") }
func PiDiscThin() icons.IsIcon                { return newIcon(thinIcon, "disc-thin") }
func PiDiscoBallThin() icons.IsIcon           { return newIcon(thinIcon, "disco-ball-thin") }
func PiDiscordLogoThin() icons.IsIcon         { return newIcon(thinIcon, "discord-logo-thin") }
func PiDivideThin() icons.IsIcon              { return newIcon(thinIcon, "divide-thin") }
func PiDnaThin() icons.IsIcon                 { return newIcon(thinIcon, "dna-thin") }
func PiDogThin() icons.IsIcon                 { return newIcon(thinIcon, "dog-thin") }
func PiDoorOpenThin() icons.IsIcon            { return newIcon(thinIcon, "door-open-thin") }
func PiDoorThin() icons.IsIcon                { return newIcon(thinIcon, "door-thin") }
func PiDotOutlineThin() icons.IsIcon          { return newIcon(thinIcon, "dot-outline-thin") }
func PiDotThin() icons.IsIcon                 { return newIcon(thinIcon, "dot-thin") }
func PiDotsNineThin() icons.IsIcon            { return newIcon(thinIcon, "dots-nine-thin") }
func PiDotsSixThin() icons.IsIcon             { return newIcon(thinIcon, "dots-six-thin") }
func PiDotsSixVerticalThin() icons.IsIcon     { return newIcon(thinIcon, "dots-six-vertical-thin") }
func PiDotsThreeCircleThin() icons.IsIcon     { return newIcon(thinIcon, "dots-three-circle-thin") }
func PiDotsThreeCircleVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "dots-three-circle-vertical-thin")
}
func PiDotsThreeOutlineThin() icons.IsIcon { return newIcon(thinIcon, "dots-three-outline-thin") }
func PiDotsThreeOutlineVerticalThin() icons.IsIcon {
	return newIcon(thinIcon, "dots-three-outline-vertical-thin")
}
func PiDotsThreeThin() icons.IsIcon           { return newIcon(thinIcon, "dots-three-thin") }
func PiDotsThreeVerticalThin() icons.IsIcon   { return newIcon(thinIcon, "dots-three-vertical-thin") }
func PiDownloadSimpleThin() icons.IsIcon      { return newIcon(thinIcon, "download-simple-thin") }
func PiDownloadThin() icons.IsIcon            { return newIcon(thinIcon, "download-thin") }
func PiDressThin() icons.IsIcon               { return newIcon(thinIcon, "dress-thin") }
func PiDresserThin() icons.IsIcon             { return newIcon(thinIcon, "dresser-thin") }
func PiDribbbleLogoThin() icons.IsIcon        { return newIcon(thinIcon, "dribbble-logo-thin") }
func PiDroneThin() icons.IsIcon               { return newIcon(thinIcon, "drone-thin") }
func PiDropHalfBottomThin() icons.IsIcon      { return newIcon(thinIcon, "drop-half-bottom-thin") }
func PiDropHalfThin() icons.IsIcon            { return newIcon(thinIcon, "drop-half-thin") }
func PiDropSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "drop-simple-thin") }
func PiDropSlashThin() icons.IsIcon           { return newIcon(thinIcon, "drop-slash-thin") }
func PiDropThin() icons.IsIcon                { return newIcon(thinIcon, "drop-thin") }
func PiDropboxLogoThin() icons.IsIcon         { return newIcon(thinIcon, "dropbox-logo-thin") }
func PiEarSlashThin() icons.IsIcon            { return newIcon(thinIcon, "ear-slash-thin") }
func PiEarThin() icons.IsIcon                 { return newIcon(thinIcon, "ear-thin") }
func PiEggCrackThin() icons.IsIcon            { return newIcon(thinIcon, "egg-crack-thin") }
func PiEggThin() icons.IsIcon                 { return newIcon(thinIcon, "egg-thin") }
func PiEjectSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "eject-simple-thin") }
func PiEjectThin() icons.IsIcon               { return newIcon(thinIcon, "eject-thin") }
func PiElevatorThin() icons.IsIcon            { return newIcon(thinIcon, "elevator-thin") }
func PiEmptyThin() icons.IsIcon               { return newIcon(thinIcon, "empty-thin") }
func PiEngineThin() icons.IsIcon              { return newIcon(thinIcon, "engine-thin") }
func PiEnvelopeOpenThin() icons.IsIcon        { return newIcon(thinIcon, "envelope-open-thin") }
func PiEnvelopeSimpleOpenThin() icons.IsIcon  { return newIcon(thinIcon, "envelope-simple-open-thin") }
func PiEnvelopeSimpleThin() icons.IsIcon      { return newIcon(thinIcon, "envelope-simple-thin") }
func PiEnvelopeThin() icons.IsIcon            { return newIcon(thinIcon, "envelope-thin") }
func PiEqualizerThin() icons.IsIcon           { return newIcon(thinIcon, "equalizer-thin") }
func PiEqualsThin() icons.IsIcon              { return newIcon(thinIcon, "equals-thin") }
func PiEraserThin() icons.IsIcon              { return newIcon(thinIcon, "eraser-thin") }
func PiEscalatorDownThin() icons.IsIcon       { return newIcon(thinIcon, "escalator-down-thin") }
func PiEscalatorUpThin() icons.IsIcon         { return newIcon(thinIcon, "escalator-up-thin") }
func PiExamThin() icons.IsIcon                { return newIcon(thinIcon, "exam-thin") }
func PiExclamationMarkThin() icons.IsIcon     { return newIcon(thinIcon, "exclamation-mark-thin") }
func PiExcludeSquareThin() icons.IsIcon       { return newIcon(thinIcon, "exclude-square-thin") }
func PiExcludeThin() icons.IsIcon             { return newIcon(thinIcon, "exclude-thin") }
func PiExportThin() icons.IsIcon              { return newIcon(thinIcon, "export-thin") }
func PiEyeClosedThin() icons.IsIcon           { return newIcon(thinIcon, "eye-closed-thin") }
func PiEyeSlashThin() icons.IsIcon            { return newIcon(thinIcon, "eye-slash-thin") }
func PiEyeThin() icons.IsIcon                 { return newIcon(thinIcon, "eye-thin") }
func PiEyedropperSampleThin() icons.IsIcon    { return newIcon(thinIcon, "eyedropper-sample-thin") }
func PiEyedropperThin() icons.IsIcon          { return newIcon(thinIcon, "eyedropper-thin") }
func PiEyeglassesThin() icons.IsIcon          { return newIcon(thinIcon, "eyeglasses-thin") }
func PiEyesThin() icons.IsIcon                { return newIcon(thinIcon, "eyes-thin") }
func PiFaceMaskThin() icons.IsIcon            { return newIcon(thinIcon, "face-mask-thin") }
func PiFacebookLogoThin() icons.IsIcon        { return newIcon(thinIcon, "facebook-logo-thin") }
func PiFactoryThin() icons.IsIcon             { return newIcon(thinIcon, "factory-thin") }
func PiFadersHorizontalThin() icons.IsIcon    { return newIcon(thinIcon, "faders-horizontal-thin") }
func PiFadersThin() icons.IsIcon              { return newIcon(thinIcon, "faders-thin") }
func PiFalloutShelterThin() icons.IsIcon      { return newIcon(thinIcon, "fallout-shelter-thin") }
func PiFanThin() icons.IsIcon                 { return newIcon(thinIcon, "fan-thin") }
func PiFarmThin() icons.IsIcon                { return newIcon(thinIcon, "farm-thin") }
func PiFastForwardCircleThin() icons.IsIcon   { return newIcon(thinIcon, "fast-forward-circle-thin") }
func PiFastForwardThin() icons.IsIcon         { return newIcon(thinIcon, "fast-forward-thin") }
func PiFeatherThin() icons.IsIcon             { return newIcon(thinIcon, "feather-thin") }
func PiFediverseLogoThin() icons.IsIcon       { return newIcon(thinIcon, "fediverse-logo-thin") }
func PiFigmaLogoThin() icons.IsIcon           { return newIcon(thinIcon, "figma-logo-thin") }
func PiFileArchiveThin() icons.IsIcon         { return newIcon(thinIcon, "file-archive-thin") }
func PiFileArrowDownThin() icons.IsIcon       { return newIcon(thinIcon, "file-arrow-down-thin") }
func PiFileArrowUpThin() icons.IsIcon         { return newIcon(thinIcon, "file-arrow-up-thin") }
func PiFileAudioThin() icons.IsIcon           { return newIcon(thinIcon, "file-audio-thin") }
func PiFileCSharpThin() icons.IsIcon          { return newIcon(thinIcon, "file-c-sharp-thin") }
func PiFileCThin() icons.IsIcon               { return newIcon(thinIcon, "file-c-thin") }
func PiFileCloudThin() icons.IsIcon           { return newIcon(thinIcon, "file-cloud-thin") }
func PiFileCodeThin() icons.IsIcon            { return newIcon(thinIcon, "file-code-thin") }
func PiFileCppThin() icons.IsIcon             { return newIcon(thinIcon, "file-cpp-thin") }
func PiFileCssThin() icons.IsIcon             { return newIcon(thinIcon, "file-css-thin") }
func PiFileCsvThin() icons.IsIcon             { return newIcon(thinIcon, "file-csv-thin") }
func PiFileDashedThin() icons.IsIcon          { return newIcon(thinIcon, "file-dashed-thin") }
func PiFileDocThin() icons.IsIcon             { return newIcon(thinIcon, "file-doc-thin") }
func PiFileHtmlThin() icons.IsIcon            { return newIcon(thinIcon, "file-html-thin") }
func PiFileImageThin() icons.IsIcon           { return newIcon(thinIcon, "file-image-thin") }
func PiFileIniThin() icons.IsIcon             { return newIcon(thinIcon, "file-ini-thin") }
func PiFileJpgThin() icons.IsIcon             { return newIcon(thinIcon, "file-jpg-thin") }
func PiFileJsThin() icons.IsIcon              { return newIcon(thinIcon, "file-js-thin") }
func PiFileJsxThin() icons.IsIcon             { return newIcon(thinIcon, "file-jsx-thin") }
func PiFileLockThin() icons.IsIcon            { return newIcon(thinIcon, "file-lock-thin") }
func PiFileMagnifyingGlassThin() icons.IsIcon { return newIcon(thinIcon, "file-magnifying-glass-thin") }
func PiFileMdThin() icons.IsIcon              { return newIcon(thinIcon, "file-md-thin") }
func PiFileMinusThin() icons.IsIcon           { return newIcon(thinIcon, "file-minus-thin") }
func PiFilePdfThin() icons.IsIcon             { return newIcon(thinIcon, "file-pdf-thin") }
func PiFilePlusThin() icons.IsIcon            { return newIcon(thinIcon, "file-plus-thin") }
func PiFilePngThin() icons.IsIcon             { return newIcon(thinIcon, "file-png-thin") }
func PiFilePptThin() icons.IsIcon             { return newIcon(thinIcon, "file-ppt-thin") }
func PiFilePyThin() icons.IsIcon              { return newIcon(thinIcon, "file-py-thin") }
func PiFileRsThin() icons.IsIcon              { return newIcon(thinIcon, "file-rs-thin") }
func PiFileSqlThin() icons.IsIcon             { return newIcon(thinIcon, "file-sql-thin") }
func PiFileSvgThin() icons.IsIcon             { return newIcon(thinIcon, "file-svg-thin") }
func PiFileTextThin() icons.IsIcon            { return newIcon(thinIcon, "file-text-thin") }
func PiFileThin() icons.IsIcon                { return newIcon(thinIcon, "file-thin") }
func PiFileTsThin() icons.IsIcon              { return newIcon(thinIcon, "file-ts-thin") }
func PiFileTsxThin() icons.IsIcon             { return newIcon(thinIcon, "file-tsx-thin") }
func PiFileTxtThin() icons.IsIcon             { return newIcon(thinIcon, "file-txt-thin") }
func PiFileVideoThin() icons.IsIcon           { return newIcon(thinIcon, "file-video-thin") }
func PiFileVueThin() icons.IsIcon             { return newIcon(thinIcon, "file-vue-thin") }
func PiFileXThin() icons.IsIcon               { return newIcon(thinIcon, "file-x-thin") }
func PiFileXlsThin() icons.IsIcon             { return newIcon(thinIcon, "file-xls-thin") }
func PiFileZipThin() icons.IsIcon             { return newIcon(thinIcon, "file-zip-thin") }
func PiFilesThin() icons.IsIcon               { return newIcon(thinIcon, "files-thin") }
func PiFilmReelThin() icons.IsIcon            { return newIcon(thinIcon, "film-reel-thin") }
func PiFilmScriptThin() icons.IsIcon          { return newIcon(thinIcon, "film-script-thin") }
func PiFilmSlateThin() icons.IsIcon           { return newIcon(thinIcon, "film-slate-thin") }
func PiFilmStripThin() icons.IsIcon           { return newIcon(thinIcon, "film-strip-thin") }
func PiFingerprintSimpleThin() icons.IsIcon   { return newIcon(thinIcon, "fingerprint-simple-thin") }
func PiFingerprintThin() icons.IsIcon         { return newIcon(thinIcon, "fingerprint-thin") }
func PiFinnTheHumanThin() icons.IsIcon        { return newIcon(thinIcon, "finn-the-human-thin") }
func PiFireExtinguisherThin() icons.IsIcon    { return newIcon(thinIcon, "fire-extinguisher-thin") }
func PiFireSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "fire-simple-thin") }
func PiFireThin() icons.IsIcon                { return newIcon(thinIcon, "fire-thin") }
func PiFireTruckThin() icons.IsIcon           { return newIcon(thinIcon, "fire-truck-thin") }
func PiFirstAidKitThin() icons.IsIcon         { return newIcon(thinIcon, "first-aid-kit-thin") }
func PiFirstAidThin() icons.IsIcon            { return newIcon(thinIcon, "first-aid-thin") }
func PiFishSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "fish-simple-thin") }
func PiFishThin() icons.IsIcon                { return newIcon(thinIcon, "fish-thin") }
func PiFlagBannerFoldThin() icons.IsIcon      { return newIcon(thinIcon, "flag-banner-fold-thin") }
func PiFlagBannerThin() icons.IsIcon          { return newIcon(thinIcon, "flag-banner-thin") }
func PiFlagCheckeredThin() icons.IsIcon       { return newIcon(thinIcon, "flag-checkered-thin") }
func PiFlagPennantThin() icons.IsIcon         { return newIcon(thinIcon, "flag-pennant-thin") }
func PiFlagThin() icons.IsIcon                { return newIcon(thinIcon, "flag-thin") }
func PiFlameThin() icons.IsIcon               { return newIcon(thinIcon, "flame-thin") }
func PiFlashlightThin() icons.IsIcon          { return newIcon(thinIcon, "flashlight-thin") }
func PiFlaskThin() icons.IsIcon               { return newIcon(thinIcon, "flask-thin") }
func PiFlipHorizontalThin() icons.IsIcon      { return newIcon(thinIcon, "flip-horizontal-thin") }
func PiFlipVerticalThin() icons.IsIcon        { return newIcon(thinIcon, "flip-vertical-thin") }
func PiFloppyDiskBackThin() icons.IsIcon      { return newIcon(thinIcon, "floppy-disk-back-thin") }
func PiFloppyDiskThin() icons.IsIcon          { return newIcon(thinIcon, "floppy-disk-thin") }
func PiFlowArrowThin() icons.IsIcon           { return newIcon(thinIcon, "flow-arrow-thin") }
func PiFlowerLotusThin() icons.IsIcon         { return newIcon(thinIcon, "flower-lotus-thin") }
func PiFlowerThin() icons.IsIcon              { return newIcon(thinIcon, "flower-thin") }
func PiFlowerTulipThin() icons.IsIcon         { return newIcon(thinIcon, "flower-tulip-thin") }
func PiFlyingSaucerThin() icons.IsIcon        { return newIcon(thinIcon, "flying-saucer-thin") }
func PiFolderDashedThin() icons.IsIcon        { return newIcon(thinIcon, "folder-dashed-thin") }
func PiFolderLockThin() icons.IsIcon          { return newIcon(thinIcon, "folder-lock-thin") }
func PiFolderMinusThin() icons.IsIcon         { return newIcon(thinIcon, "folder-minus-thin") }
func PiFolderOpenThin() icons.IsIcon          { return newIcon(thinIcon, "folder-open-thin") }
func PiFolderPlusThin() icons.IsIcon          { return newIcon(thinIcon, "folder-plus-thin") }
func PiFolderSimpleDashedThin() icons.IsIcon  { return newIcon(thinIcon, "folder-simple-dashed-thin") }
func PiFolderSimpleLockThin() icons.IsIcon    { return newIcon(thinIcon, "folder-simple-lock-thin") }
func PiFolderSimpleMinusThin() icons.IsIcon   { return newIcon(thinIcon, "folder-simple-minus-thin") }
func PiFolderSimplePlusThin() icons.IsIcon    { return newIcon(thinIcon, "folder-simple-plus-thin") }
func PiFolderSimpleStarThin() icons.IsIcon    { return newIcon(thinIcon, "folder-simple-star-thin") }
func PiFolderSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "folder-simple-thin") }
func PiFolderSimpleUserThin() icons.IsIcon    { return newIcon(thinIcon, "folder-simple-user-thin") }
func PiFolderStarThin() icons.IsIcon          { return newIcon(thinIcon, "folder-star-thin") }
func PiFolderThin() icons.IsIcon              { return newIcon(thinIcon, "folder-thin") }
func PiFolderUserThin() icons.IsIcon          { return newIcon(thinIcon, "folder-user-thin") }
func PiFoldersThin() icons.IsIcon             { return newIcon(thinIcon, "folders-thin") }
func PiFootballHelmetThin() icons.IsIcon      { return newIcon(thinIcon, "football-helmet-thin") }
func PiFootballThin() icons.IsIcon            { return newIcon(thinIcon, "football-thin") }
func PiFootprintsThin() icons.IsIcon          { return newIcon(thinIcon, "footprints-thin") }
func PiForkKnifeThin() icons.IsIcon           { return newIcon(thinIcon, "fork-knife-thin") }
func PiFourKThin() icons.IsIcon               { return newIcon(thinIcon, "four-k-thin") }
func PiFrameCornersThin() icons.IsIcon        { return newIcon(thinIcon, "frame-corners-thin") }
func PiFramerLogoThin() icons.IsIcon          { return newIcon(thinIcon, "framer-logo-thin") }
func PiFunctionThin() icons.IsIcon            { return newIcon(thinIcon, "function-thin") }
func PiFunnelSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "funnel-simple-thin") }
func PiFunnelSimpleXThin() icons.IsIcon       { return newIcon(thinIcon, "funnel-simple-x-thin") }
func PiFunnelThin() icons.IsIcon              { return newIcon(thinIcon, "funnel-thin") }
func PiFunnelXThin() icons.IsIcon             { return newIcon(thinIcon, "funnel-x-thin") }
func PiGameControllerThin() icons.IsIcon      { return newIcon(thinIcon, "game-controller-thin") }
func PiGarageThin() icons.IsIcon              { return newIcon(thinIcon, "garage-thin") }
func PiGasCanThin() icons.IsIcon              { return newIcon(thinIcon, "gas-can-thin") }
func PiGasPumpThin() icons.IsIcon             { return newIcon(thinIcon, "gas-pump-thin") }
func PiGaugeThin() icons.IsIcon               { return newIcon(thinIcon, "gauge-thin") }
func PiGavelThin() icons.IsIcon               { return newIcon(thinIcon, "gavel-thin") }
func PiGearFineThin() icons.IsIcon            { return newIcon(thinIcon, "gear-fine-thin") }
func PiGearSixThin() icons.IsIcon             { return newIcon(thinIcon, "gear-six-thin") }
func PiGearThin() icons.IsIcon                { return newIcon(thinIcon, "gear-thin") }
func PiGenderFemaleThin() icons.IsIcon        { return newIcon(thinIcon, "gender-female-thin") }
func PiGenderIntersexThin() icons.IsIcon      { return newIcon(thinIcon, "gender-intersex-thin") }
func PiGenderMaleThin() icons.IsIcon          { return newIcon(thinIcon, "gender-male-thin") }
func PiGenderNeuterThin() icons.IsIcon        { return newIcon(thinIcon, "gender-neuter-thin") }
func PiGenderNonbinaryThin() icons.IsIcon     { return newIcon(thinIcon, "gender-nonbinary-thin") }
func PiGenderTransgenderThin() icons.IsIcon   { return newIcon(thinIcon, "gender-transgender-thin") }
func PiGhostThin() icons.IsIcon               { return newIcon(thinIcon, "ghost-thin") }
func PiGifThin() icons.IsIcon                 { return newIcon(thinIcon, "gif-thin") }
func PiGiftThin() icons.IsIcon                { return newIcon(thinIcon, "gift-thin") }
func PiGitBranchThin() icons.IsIcon           { return newIcon(thinIcon, "git-branch-thin") }
func PiGitCommitThin() icons.IsIcon           { return newIcon(thinIcon, "git-commit-thin") }
func PiGitDiffThin() icons.IsIcon             { return newIcon(thinIcon, "git-diff-thin") }
func PiGitForkThin() icons.IsIcon             { return newIcon(thinIcon, "git-fork-thin") }
func PiGitMergeThin() icons.IsIcon            { return newIcon(thinIcon, "git-merge-thin") }
func PiGitPullRequestThin() icons.IsIcon      { return newIcon(thinIcon, "git-pull-request-thin") }
func PiGithubLogoThin() icons.IsIcon          { return newIcon(thinIcon, "github-logo-thin") }
func PiGitlabLogoSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "gitlab-logo-simple-thin") }
func PiGitlabLogoThin() icons.IsIcon          { return newIcon(thinIcon, "gitlab-logo-thin") }
func PiGlobeHemisphereEastThin() icons.IsIcon { return newIcon(thinIcon, "globe-hemisphere-east-thin") }
func PiGlobeHemisphereWestThin() icons.IsIcon { return newIcon(thinIcon, "globe-hemisphere-west-thin") }
func PiGlobeSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "globe-simple-thin") }
func PiGlobeSimpleXThin() icons.IsIcon        { return newIcon(thinIcon, "globe-simple-x-thin") }
func PiGlobeStandThin() icons.IsIcon          { return newIcon(thinIcon, "globe-stand-thin") }
func PiGlobeThin() icons.IsIcon               { return newIcon(thinIcon, "globe-thin") }
func PiGlobeXThin() icons.IsIcon              { return newIcon(thinIcon, "globe-x-thin") }
func PiGogglesThin() icons.IsIcon             { return newIcon(thinIcon, "goggles-thin") }
func PiGolfThin() icons.IsIcon                { return newIcon(thinIcon, "golf-thin") }
func PiGoodreadsLogoThin() icons.IsIcon       { return newIcon(thinIcon, "goodreads-logo-thin") }
func PiGoogleCardboardLogoThin() icons.IsIcon { return newIcon(thinIcon, "google-cardboard-logo-thin") }
func PiGoogleChromeLogoThin() icons.IsIcon    { return newIcon(thinIcon, "google-chrome-logo-thin") }
func PiGoogleDriveLogoThin() icons.IsIcon     { return newIcon(thinIcon, "google-drive-logo-thin") }
func PiGoogleLogoThin() icons.IsIcon          { return newIcon(thinIcon, "google-logo-thin") }
func PiGooglePhotosLogoThin() icons.IsIcon    { return newIcon(thinIcon, "google-photos-logo-thin") }
func PiGooglePlayLogoThin() icons.IsIcon      { return newIcon(thinIcon, "google-play-logo-thin") }
func PiGooglePodcastsLogoThin() icons.IsIcon  { return newIcon(thinIcon, "google-podcasts-logo-thin") }
func PiGpsFixThin() icons.IsIcon              { return newIcon(thinIcon, "gps-fix-thin") }
func PiGpsSlashThin() icons.IsIcon            { return newIcon(thinIcon, "gps-slash-thin") }
func PiGpsThin() icons.IsIcon                 { return newIcon(thinIcon, "gps-thin") }
func PiGradientThin() icons.IsIcon            { return newIcon(thinIcon, "gradient-thin") }
func PiGraduationCapThin() icons.IsIcon       { return newIcon(thinIcon, "graduation-cap-thin") }
func PiGrainsSlashThin() icons.IsIcon         { return newIcon(thinIcon, "grains-slash-thin") }
func PiGrainsThin() icons.IsIcon              { return newIcon(thinIcon, "grains-thin") }
func PiGraphThin() icons.IsIcon               { return newIcon(thinIcon, "graph-thin") }
func PiGraphicsCardThin() icons.IsIcon        { return newIcon(thinIcon, "graphics-card-thin") }
func PiGreaterThanOrEqualThin() icons.IsIcon  { return newIcon(thinIcon, "greater-than-or-equal-thin") }
func PiGreaterThanThin() icons.IsIcon         { return newIcon(thinIcon, "greater-than-thin") }
func PiGridFourThin() icons.IsIcon            { return newIcon(thinIcon, "grid-four-thin") }
func PiGridNineThin() icons.IsIcon            { return newIcon(thinIcon, "grid-nine-thin") }
func PiGuitarThin() icons.IsIcon              { return newIcon(thinIcon, "guitar-thin") }
func PiHairDryerThin() icons.IsIcon           { return newIcon(thinIcon, "hair-dryer-thin") }
func PiHamburgerThin() icons.IsIcon           { return newIcon(thinIcon, "hamburger-thin") }
func PiHammerThin() icons.IsIcon              { return newIcon(thinIcon, "hammer-thin") }
func PiHandArrowDownThin() icons.IsIcon       { return newIcon(thinIcon, "hand-arrow-down-thin") }
func PiHandArrowUpThin() icons.IsIcon         { return newIcon(thinIcon, "hand-arrow-up-thin") }
func PiHandCoinsThin() icons.IsIcon           { return newIcon(thinIcon, "hand-coins-thin") }
func PiHandDepositThin() icons.IsIcon         { return newIcon(thinIcon, "hand-deposit-thin") }
func PiHandEyeThin() icons.IsIcon             { return newIcon(thinIcon, "hand-eye-thin") }
func PiHandFistThin() icons.IsIcon            { return newIcon(thinIcon, "hand-fist-thin") }
func PiHandGrabbingThin() icons.IsIcon        { return newIcon(thinIcon, "hand-grabbing-thin") }
func PiHandHeartThin() icons.IsIcon           { return newIcon(thinIcon, "hand-heart-thin") }
func PiHandPalmThin() icons.IsIcon            { return newIcon(thinIcon, "hand-palm-thin") }
func PiHandPeaceThin() icons.IsIcon           { return newIcon(thinIcon, "hand-peace-thin") }
func PiHandPointingThin() icons.IsIcon        { return newIcon(thinIcon, "hand-pointing-thin") }
func PiHandSoapThin() icons.IsIcon            { return newIcon(thinIcon, "hand-soap-thin") }
func PiHandSwipeLeftThin() icons.IsIcon       { return newIcon(thinIcon, "hand-swipe-left-thin") }
func PiHandSwipeRightThin() icons.IsIcon      { return newIcon(thinIcon, "hand-swipe-right-thin") }
func PiHandTapThin() icons.IsIcon             { return newIcon(thinIcon, "hand-tap-thin") }
func PiHandThin() icons.IsIcon                { return newIcon(thinIcon, "hand-thin") }
func PiHandWavingThin() icons.IsIcon          { return newIcon(thinIcon, "hand-waving-thin") }
func PiHandWithdrawThin() icons.IsIcon        { return newIcon(thinIcon, "hand-withdraw-thin") }
func PiHandbagSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "handbag-simple-thin") }
func PiHandbagThin() icons.IsIcon             { return newIcon(thinIcon, "handbag-thin") }
func PiHandsClappingThin() icons.IsIcon       { return newIcon(thinIcon, "hands-clapping-thin") }
func PiHandsPrayingThin() icons.IsIcon        { return newIcon(thinIcon, "hands-praying-thin") }
func PiHandshakeThin() icons.IsIcon           { return newIcon(thinIcon, "handshake-thin") }
func PiHardDriveThin() icons.IsIcon           { return newIcon(thinIcon, "hard-drive-thin") }
func PiHardDrivesThin() icons.IsIcon          { return newIcon(thinIcon, "hard-drives-thin") }
func PiHardHatThin() icons.IsIcon             { return newIcon(thinIcon, "hard-hat-thin") }
func PiHashStraightThin() icons.IsIcon        { return newIcon(thinIcon, "hash-straight-thin") }
func PiHashThin() icons.IsIcon                { return newIcon(thinIcon, "hash-thin") }
func PiHeadCircuitThin() icons.IsIcon         { return newIcon(thinIcon, "head-circuit-thin") }
func PiHeadlightsThin() icons.IsIcon          { return newIcon(thinIcon, "headlights-thin") }
func PiHeadphonesThin() icons.IsIcon          { return newIcon(thinIcon, "headphones-thin") }
func PiHeadsetThin() icons.IsIcon             { return newIcon(thinIcon, "headset-thin") }
func PiHeartBreakThin() icons.IsIcon          { return newIcon(thinIcon, "heart-break-thin") }
func PiHeartHalfThin() icons.IsIcon           { return newIcon(thinIcon, "heart-half-thin") }
func PiHeartStraightBreakThin() icons.IsIcon  { return newIcon(thinIcon, "heart-straight-break-thin") }
func PiHeartStraightThin() icons.IsIcon       { return newIcon(thinIcon, "heart-straight-thin") }
func PiHeartThin() icons.IsIcon               { return newIcon(thinIcon, "heart-thin") }
func PiHeartbeatThin() icons.IsIcon           { return newIcon(thinIcon, "heartbeat-thin") }
func PiHexagonThin() icons.IsIcon             { return newIcon(thinIcon, "hexagon-thin") }
func PiHighDefinitionThin() icons.IsIcon      { return newIcon(thinIcon, "high-definition-thin") }
func PiHighHeelThin() icons.IsIcon            { return newIcon(thinIcon, "high-heel-thin") }
func PiHighlighterCircleThin() icons.IsIcon   { return newIcon(thinIcon, "highlighter-circle-thin") }
func PiHighlighterThin() icons.IsIcon         { return newIcon(thinIcon, "highlighter-thin") }
func PiHockeyThin() icons.IsIcon              { return newIcon(thinIcon, "hockey-thin") }
func PiHoodieThin() icons.IsIcon              { return newIcon(thinIcon, "hoodie-thin") }
func PiHorseThin() icons.IsIcon               { return newIcon(thinIcon, "horse-thin") }
func PiHospitalThin() icons.IsIcon            { return newIcon(thinIcon, "hospital-thin") }
func PiHourglassHighThin() icons.IsIcon       { return newIcon(thinIcon, "hourglass-high-thin") }
func PiHourglassLowThin() icons.IsIcon        { return newIcon(thinIcon, "hourglass-low-thin") }
func PiHourglassMediumThin() icons.IsIcon     { return newIcon(thinIcon, "hourglass-medium-thin") }
func PiHourglassSimpleHighThin() icons.IsIcon { return newIcon(thinIcon, "hourglass-simple-high-thin") }
func PiHourglassSimpleLowThin() icons.IsIcon  { return newIcon(thinIcon, "hourglass-simple-low-thin") }
func PiHourglassSimpleMediumThin() icons.IsIcon {
	return newIcon(thinIcon, "hourglass-simple-medium-thin")
}
func PiHourglassSimpleThin() icons.IsIcon     { return newIcon(thinIcon, "hourglass-simple-thin") }
func PiHourglassThin() icons.IsIcon           { return newIcon(thinIcon, "hourglass-thin") }
func PiHouseLineThin() icons.IsIcon           { return newIcon(thinIcon, "house-line-thin") }
func PiHouseSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "house-simple-thin") }
func PiHouseThin() icons.IsIcon               { return newIcon(thinIcon, "house-thin") }
func PiHurricaneThin() icons.IsIcon           { return newIcon(thinIcon, "hurricane-thin") }
func PiIceCreamThin() icons.IsIcon            { return newIcon(thinIcon, "ice-cream-thin") }
func PiIdentificationBadgeThin() icons.IsIcon { return newIcon(thinIcon, "identification-badge-thin") }
func PiIdentificationCardThin() icons.IsIcon  { return newIcon(thinIcon, "identification-card-thin") }
func PiImageBrokenThin() icons.IsIcon         { return newIcon(thinIcon, "image-broken-thin") }
func PiImageSquareThin() icons.IsIcon         { return newIcon(thinIcon, "image-square-thin") }
func PiImageThin() icons.IsIcon               { return newIcon(thinIcon, "image-thin") }
func PiImagesSquareThin() icons.IsIcon        { return newIcon(thinIcon, "images-square-thin") }
func PiImagesThin() icons.IsIcon              { return newIcon(thinIcon, "images-thin") }
func PiInfinityThin() icons.IsIcon            { return newIcon(thinIcon, "infinity-thin") }
func PiInfoThin() icons.IsIcon                { return newIcon(thinIcon, "info-thin") }
func PiInstagramLogoThin() icons.IsIcon       { return newIcon(thinIcon, "instagram-logo-thin") }
func PiIntersectSquareThin() icons.IsIcon     { return newIcon(thinIcon, "intersect-square-thin") }
func PiIntersectThin() icons.IsIcon           { return newIcon(thinIcon, "intersect-thin") }
func PiIntersectThreeThin() icons.IsIcon      { return newIcon(thinIcon, "intersect-three-thin") }
func PiIntersectionThin() icons.IsIcon        { return newIcon(thinIcon, "intersection-thin") }
func PiInvoiceThin() icons.IsIcon             { return newIcon(thinIcon, "invoice-thin") }
func PiIslandThin() icons.IsIcon              { return newIcon(thinIcon, "island-thin") }
func PiJarLabelThin() icons.IsIcon            { return newIcon(thinIcon, "jar-label-thin") }
func PiJarThin() icons.IsIcon                 { return newIcon(thinIcon, "jar-thin") }
func PiJeepThin() icons.IsIcon                { return newIcon(thinIcon, "jeep-thin") }
func PiJoystickThin() icons.IsIcon            { return newIcon(thinIcon, "joystick-thin") }
func PiKanbanThin() icons.IsIcon              { return newIcon(thinIcon, "kanban-thin") }
func PiKeyReturnThin() icons.IsIcon           { return newIcon(thinIcon, "key-return-thin") }
func PiKeyThin() icons.IsIcon                 { return newIcon(thinIcon, "key-thin") }
func PiKeyboardThin() icons.IsIcon            { return newIcon(thinIcon, "keyboard-thin") }
func PiKeyholeThin() icons.IsIcon             { return newIcon(thinIcon, "keyhole-thin") }
func PiKnifeThin() icons.IsIcon               { return newIcon(thinIcon, "knife-thin") }
func PiLadderSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "ladder-simple-thin") }
func PiLadderThin() icons.IsIcon              { return newIcon(thinIcon, "ladder-thin") }
func PiLampPendantThin() icons.IsIcon         { return newIcon(thinIcon, "lamp-pendant-thin") }
func PiLampThin() icons.IsIcon                { return newIcon(thinIcon, "lamp-thin") }
func PiLaptopThin() icons.IsIcon              { return newIcon(thinIcon, "laptop-thin") }
func PiLassoThin() icons.IsIcon               { return newIcon(thinIcon, "lasso-thin") }
func PiLastfmLogoThin() icons.IsIcon          { return newIcon(thinIcon, "lastfm-logo-thin") }
func PiLayoutThin() icons.IsIcon              { return newIcon(thinIcon, "layout-thin") }
func PiLeafThin() icons.IsIcon                { return newIcon(thinIcon, "leaf-thin") }
func PiLecternThin() icons.IsIcon             { return newIcon(thinIcon, "lectern-thin") }
func PiLegoSmileyThin() icons.IsIcon          { return newIcon(thinIcon, "lego-smiley-thin") }
func PiLegoThin() icons.IsIcon                { return newIcon(thinIcon, "lego-thin") }
func PiLessThanOrEqualThin() icons.IsIcon     { return newIcon(thinIcon, "less-than-or-equal-thin") }
func PiLessThanThin() icons.IsIcon            { return newIcon(thinIcon, "less-than-thin") }
func PiLetterCircleHThin() icons.IsIcon       { return newIcon(thinIcon, "letter-circle-h-thin") }
func PiLetterCirclePThin() icons.IsIcon       { return newIcon(thinIcon, "letter-circle-p-thin") }
func PiLetterCircleVThin() icons.IsIcon       { return newIcon(thinIcon, "letter-circle-v-thin") }
func PiLifebuoyThin() icons.IsIcon            { return newIcon(thinIcon, "lifebuoy-thin") }
func PiLightbulbFilamentThin() icons.IsIcon   { return newIcon(thinIcon, "lightbulb-filament-thin") }
func PiLightbulbThin() icons.IsIcon           { return newIcon(thinIcon, "lightbulb-thin") }
func PiLighthouseThin() icons.IsIcon          { return newIcon(thinIcon, "lighthouse-thin") }
func PiLightningAThin() icons.IsIcon          { return newIcon(thinIcon, "lightning-a-thin") }
func PiLightningSlashThin() icons.IsIcon      { return newIcon(thinIcon, "lightning-slash-thin") }
func PiLightningThin() icons.IsIcon           { return newIcon(thinIcon, "lightning-thin") }
func PiLineSegmentThin() icons.IsIcon         { return newIcon(thinIcon, "line-segment-thin") }
func PiLineSegmentsThin() icons.IsIcon        { return newIcon(thinIcon, "line-segments-thin") }
func PiLineVerticalThin() icons.IsIcon        { return newIcon(thinIcon, "line-vertical-thin") }
func PiLinkBreakThin() icons.IsIcon           { return newIcon(thinIcon, "link-break-thin") }
func PiLinkSimpleBreakThin() icons.IsIcon     { return newIcon(thinIcon, "link-simple-break-thin") }
func PiLinkSimpleHorizontalBreakThin() icons.IsIcon {
	return newIcon(thinIcon, "link-simple-horizontal-break-thin")
}
func PiLinkSimpleHorizontalThin() icons.IsIcon {
	return newIcon(thinIcon, "link-simple-horizontal-thin")
}
func PiLinkSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "link-simple-thin") }
func PiLinkThin() icons.IsIcon                { return newIcon(thinIcon, "link-thin") }
func PiLinkedinLogoThin() icons.IsIcon        { return newIcon(thinIcon, "linkedin-logo-thin") }
func PiLinktreeLogoThin() icons.IsIcon        { return newIcon(thinIcon, "linktree-logo-thin") }
func PiLinuxLogoThin() icons.IsIcon           { return newIcon(thinIcon, "linux-logo-thin") }
func PiListBulletsThin() icons.IsIcon         { return newIcon(thinIcon, "list-bullets-thin") }
func PiListChecksThin() icons.IsIcon          { return newIcon(thinIcon, "list-checks-thin") }
func PiListDashesThin() icons.IsIcon          { return newIcon(thinIcon, "list-dashes-thin") }
func PiListHeartThin() icons.IsIcon           { return newIcon(thinIcon, "list-heart-thin") }
func PiListMagnifyingGlassThin() icons.IsIcon { return newIcon(thinIcon, "list-magnifying-glass-thin") }
func PiListNumbersThin() icons.IsIcon         { return newIcon(thinIcon, "list-numbers-thin") }
func PiListPlusThin() icons.IsIcon            { return newIcon(thinIcon, "list-plus-thin") }
func PiListStarThin() icons.IsIcon            { return newIcon(thinIcon, "list-star-thin") }
func PiListThin() icons.IsIcon                { return newIcon(thinIcon, "list-thin") }
func PiLockKeyOpenThin() icons.IsIcon         { return newIcon(thinIcon, "lock-key-open-thin") }
func PiLockKeyThin() icons.IsIcon             { return newIcon(thinIcon, "lock-key-thin") }
func PiLockLaminatedOpenThin() icons.IsIcon   { return newIcon(thinIcon, "lock-laminated-open-thin") }
func PiLockLaminatedThin() icons.IsIcon       { return newIcon(thinIcon, "lock-laminated-thin") }
func PiLockOpenThin() icons.IsIcon            { return newIcon(thinIcon, "lock-open-thin") }
func PiLockSimpleOpenThin() icons.IsIcon      { return newIcon(thinIcon, "lock-simple-open-thin") }
func PiLockSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "lock-simple-thin") }
func PiLockThin() icons.IsIcon                { return newIcon(thinIcon, "lock-thin") }
func PiLockersThin() icons.IsIcon             { return newIcon(thinIcon, "lockers-thin") }
func PiLogThin() icons.IsIcon                 { return newIcon(thinIcon, "log-thin") }
func PiMagicWandThin() icons.IsIcon           { return newIcon(thinIcon, "magic-wand-thin") }
func PiMagnetStraightThin() icons.IsIcon      { return newIcon(thinIcon, "magnet-straight-thin") }
func PiMagnetThin() icons.IsIcon              { return newIcon(thinIcon, "magnet-thin") }
func PiMagnifyingGlassMinusThin() icons.IsIcon {
	return newIcon(thinIcon, "magnifying-glass-minus-thin")
}
func PiMagnifyingGlassPlusThin() icons.IsIcon { return newIcon(thinIcon, "magnifying-glass-plus-thin") }
func PiMagnifyingGlassThin() icons.IsIcon     { return newIcon(thinIcon, "magnifying-glass-thin") }
func PiMailboxThin() icons.IsIcon             { return newIcon(thinIcon, "mailbox-thin") }
func PiMapPinAreaThin() icons.IsIcon          { return newIcon(thinIcon, "map-pin-area-thin") }
func PiMapPinLineThin() icons.IsIcon          { return newIcon(thinIcon, "map-pin-line-thin") }
func PiMapPinPlusThin() icons.IsIcon          { return newIcon(thinIcon, "map-pin-plus-thin") }
func PiMapPinSimpleAreaThin() icons.IsIcon    { return newIcon(thinIcon, "map-pin-simple-area-thin") }
func PiMapPinSimpleLineThin() icons.IsIcon    { return newIcon(thinIcon, "map-pin-simple-line-thin") }
func PiMapPinSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "map-pin-simple-thin") }
func PiMapPinThin() icons.IsIcon              { return newIcon(thinIcon, "map-pin-thin") }
func PiMapTrifoldThin() icons.IsIcon          { return newIcon(thinIcon, "map-trifold-thin") }
func PiMarkdownLogoThin() icons.IsIcon        { return newIcon(thinIcon, "markdown-logo-thin") }
func PiMarkerCircleThin() icons.IsIcon        { return newIcon(thinIcon, "marker-circle-thin") }
func PiMartiniThin() icons.IsIcon             { return newIcon(thinIcon, "martini-thin") }
func PiMaskHappyThin() icons.IsIcon           { return newIcon(thinIcon, "mask-happy-thin") }
func PiMaskSadThin() icons.IsIcon             { return newIcon(thinIcon, "mask-sad-thin") }
func PiMastodonLogoThin() icons.IsIcon        { return newIcon(thinIcon, "mastodon-logo-thin") }
func PiMathOperationsThin() icons.IsIcon      { return newIcon(thinIcon, "math-operations-thin") }
func PiMatrixLogoThin() icons.IsIcon          { return newIcon(thinIcon, "matrix-logo-thin") }
func PiMedalMilitaryThin() icons.IsIcon       { return newIcon(thinIcon, "medal-military-thin") }
func PiMedalThin() icons.IsIcon               { return newIcon(thinIcon, "medal-thin") }
func PiMediumLogoThin() icons.IsIcon          { return newIcon(thinIcon, "medium-logo-thin") }
func PiMegaphoneSimpleThin() icons.IsIcon     { return newIcon(thinIcon, "megaphone-simple-thin") }
func PiMegaphoneThin() icons.IsIcon           { return newIcon(thinIcon, "megaphone-thin") }
func PiMemberOfThin() icons.IsIcon            { return newIcon(thinIcon, "member-of-thin") }
func PiMemoryThin() icons.IsIcon              { return newIcon(thinIcon, "memory-thin") }
func PiMessengerLogoThin() icons.IsIcon       { return newIcon(thinIcon, "messenger-logo-thin") }
func PiMetaLogoThin() icons.IsIcon            { return newIcon(thinIcon, "meta-logo-thin") }
func PiMeteorThin() icons.IsIcon              { return newIcon(thinIcon, "meteor-thin") }
func PiMetronomeThin() icons.IsIcon           { return newIcon(thinIcon, "metronome-thin") }
func PiMicrophoneSlashThin() icons.IsIcon     { return newIcon(thinIcon, "microphone-slash-thin") }
func PiMicrophoneStageThin() icons.IsIcon     { return newIcon(thinIcon, "microphone-stage-thin") }
func PiMicrophoneThin() icons.IsIcon          { return newIcon(thinIcon, "microphone-thin") }
func PiMicroscopeThin() icons.IsIcon          { return newIcon(thinIcon, "microscope-thin") }
func PiMicrosoftExcelLogoThin() icons.IsIcon  { return newIcon(thinIcon, "microsoft-excel-logo-thin") }
func PiMicrosoftOutlookLogoThin() icons.IsIcon {
	return newIcon(thinIcon, "microsoft-outlook-logo-thin")
}
func PiMicrosoftPowerpointLogoThin() icons.IsIcon {
	return newIcon(thinIcon, "microsoft-powerpoint-logo-thin")
}
func PiMicrosoftTeamsLogoThin() icons.IsIcon  { return newIcon(thinIcon, "microsoft-teams-logo-thin") }
func PiMicrosoftWordLogoThin() icons.IsIcon   { return newIcon(thinIcon, "microsoft-word-logo-thin") }
func PiMinusCircleThin() icons.IsIcon         { return newIcon(thinIcon, "minus-circle-thin") }
func PiMinusSquareThin() icons.IsIcon         { return newIcon(thinIcon, "minus-square-thin") }
func PiMinusThin() icons.IsIcon               { return newIcon(thinIcon, "minus-thin") }
func PiMoneyThin() icons.IsIcon               { return newIcon(thinIcon, "money-thin") }
func PiMoneyWavyThin() icons.IsIcon           { return newIcon(thinIcon, "money-wavy-thin") }
func PiMonitorArrowUpThin() icons.IsIcon      { return newIcon(thinIcon, "monitor-arrow-up-thin") }
func PiMonitorPlayThin() icons.IsIcon         { return newIcon(thinIcon, "monitor-play-thin") }
func PiMonitorThin() icons.IsIcon             { return newIcon(thinIcon, "monitor-thin") }
func PiMoonStarsThin() icons.IsIcon           { return newIcon(thinIcon, "moon-stars-thin") }
func PiMoonThin() icons.IsIcon                { return newIcon(thinIcon, "moon-thin") }
func PiMopedFrontThin() icons.IsIcon          { return newIcon(thinIcon, "moped-front-thin") }
func PiMopedThin() icons.IsIcon               { return newIcon(thinIcon, "moped-thin") }
func PiMosqueThin() icons.IsIcon              { return newIcon(thinIcon, "mosque-thin") }
func PiMotorcycleThin() icons.IsIcon          { return newIcon(thinIcon, "motorcycle-thin") }
func PiMountainsThin() icons.IsIcon           { return newIcon(thinIcon, "mountains-thin") }
func PiMouseLeftClickThin() icons.IsIcon      { return newIcon(thinIcon, "mouse-left-click-thin") }
func PiMouseMiddleClickThin() icons.IsIcon    { return newIcon(thinIcon, "mouse-middle-click-thin") }
func PiMouseRightClickThin() icons.IsIcon     { return newIcon(thinIcon, "mouse-right-click-thin") }
func PiMouseScrollThin() icons.IsIcon         { return newIcon(thinIcon, "mouse-scroll-thin") }
func PiMouseSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "mouse-simple-thin") }
func PiMouseThin() icons.IsIcon               { return newIcon(thinIcon, "mouse-thin") }
func PiMusicNoteSimpleThin() icons.IsIcon     { return newIcon(thinIcon, "music-note-simple-thin") }
func PiMusicNoteThin() icons.IsIcon           { return newIcon(thinIcon, "music-note-thin") }
func PiMusicNotesMinusThin() icons.IsIcon     { return newIcon(thinIcon, "music-notes-minus-thin") }
func PiMusicNotesPlusThin() icons.IsIcon      { return newIcon(thinIcon, "music-notes-plus-thin") }
func PiMusicNotesSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "music-notes-simple-thin") }
func PiMusicNotesThin() icons.IsIcon          { return newIcon(thinIcon, "music-notes-thin") }
func PiNavigationArrowThin() icons.IsIcon     { return newIcon(thinIcon, "navigation-arrow-thin") }
func PiNeedleThin() icons.IsIcon              { return newIcon(thinIcon, "needle-thin") }
func PiNetworkSlashThin() icons.IsIcon        { return newIcon(thinIcon, "network-slash-thin") }
func PiNetworkThin() icons.IsIcon             { return newIcon(thinIcon, "network-thin") }
func PiNetworkXThin() icons.IsIcon            { return newIcon(thinIcon, "network-x-thin") }
func PiNewspaperClippingThin() icons.IsIcon   { return newIcon(thinIcon, "newspaper-clipping-thin") }
func PiNewspaperThin() icons.IsIcon           { return newIcon(thinIcon, "newspaper-thin") }
func PiNotEqualsThin() icons.IsIcon           { return newIcon(thinIcon, "not-equals-thin") }
func PiNotMemberOfThin() icons.IsIcon         { return newIcon(thinIcon, "not-member-of-thin") }
func PiNotSubsetOfThin() icons.IsIcon         { return newIcon(thinIcon, "not-subset-of-thin") }
func PiNotSupersetOfThin() icons.IsIcon       { return newIcon(thinIcon, "not-superset-of-thin") }
func PiNotchesThin() icons.IsIcon             { return newIcon(thinIcon, "notches-thin") }
func PiNoteBlankThin() icons.IsIcon           { return newIcon(thinIcon, "note-blank-thin") }
func PiNotePencilThin() icons.IsIcon          { return newIcon(thinIcon, "note-pencil-thin") }
func PiNoteThin() icons.IsIcon                { return newIcon(thinIcon, "note-thin") }
func PiNotebookThin() icons.IsIcon            { return newIcon(thinIcon, "notebook-thin") }
func PiNotepadThin() icons.IsIcon             { return newIcon(thinIcon, "notepad-thin") }
func PiNotificationThin() icons.IsIcon        { return newIcon(thinIcon, "notification-thin") }
func PiNotionLogoThin() icons.IsIcon          { return newIcon(thinIcon, "notion-logo-thin") }
func PiNuclearPlantThin() icons.IsIcon        { return newIcon(thinIcon, "nuclear-plant-thin") }
func PiNumberCircleEightThin() icons.IsIcon   { return newIcon(thinIcon, "number-circle-eight-thin") }
func PiNumberCircleFiveThin() icons.IsIcon    { return newIcon(thinIcon, "number-circle-five-thin") }
func PiNumberCircleFourThin() icons.IsIcon    { return newIcon(thinIcon, "number-circle-four-thin") }
func PiNumberCircleNineThin() icons.IsIcon    { return newIcon(thinIcon, "number-circle-nine-thin") }
func PiNumberCircleOneThin() icons.IsIcon     { return newIcon(thinIcon, "number-circle-one-thin") }
func PiNumberCircleSevenThin() icons.IsIcon   { return newIcon(thinIcon, "number-circle-seven-thin") }
func PiNumberCircleSixThin() icons.IsIcon     { return newIcon(thinIcon, "number-circle-six-thin") }
func PiNumberCircleThreeThin() icons.IsIcon   { return newIcon(thinIcon, "number-circle-three-thin") }
func PiNumberCircleTwoThin() icons.IsIcon     { return newIcon(thinIcon, "number-circle-two-thin") }
func PiNumberCircleZeroThin() icons.IsIcon    { return newIcon(thinIcon, "number-circle-zero-thin") }
func PiNumberEightThin() icons.IsIcon         { return newIcon(thinIcon, "number-eight-thin") }
func PiNumberFiveThin() icons.IsIcon          { return newIcon(thinIcon, "number-five-thin") }
func PiNumberFourThin() icons.IsIcon          { return newIcon(thinIcon, "number-four-thin") }
func PiNumberNineThin() icons.IsIcon          { return newIcon(thinIcon, "number-nine-thin") }
func PiNumberOneThin() icons.IsIcon           { return newIcon(thinIcon, "number-one-thin") }
func PiNumberSevenThin() icons.IsIcon         { return newIcon(thinIcon, "number-seven-thin") }
func PiNumberSixThin() icons.IsIcon           { return newIcon(thinIcon, "number-six-thin") }
func PiNumberSquareEightThin() icons.IsIcon   { return newIcon(thinIcon, "number-square-eight-thin") }
func PiNumberSquareFiveThin() icons.IsIcon    { return newIcon(thinIcon, "number-square-five-thin") }
func PiNumberSquareFourThin() icons.IsIcon    { return newIcon(thinIcon, "number-square-four-thin") }
func PiNumberSquareNineThin() icons.IsIcon    { return newIcon(thinIcon, "number-square-nine-thin") }
func PiNumberSquareOneThin() icons.IsIcon     { return newIcon(thinIcon, "number-square-one-thin") }
func PiNumberSquareSevenThin() icons.IsIcon   { return newIcon(thinIcon, "number-square-seven-thin") }
func PiNumberSquareSixThin() icons.IsIcon     { return newIcon(thinIcon, "number-square-six-thin") }
func PiNumberSquareThreeThin() icons.IsIcon   { return newIcon(thinIcon, "number-square-three-thin") }
func PiNumberSquareTwoThin() icons.IsIcon     { return newIcon(thinIcon, "number-square-two-thin") }
func PiNumberSquareZeroThin() icons.IsIcon    { return newIcon(thinIcon, "number-square-zero-thin") }
func PiNumberThreeThin() icons.IsIcon         { return newIcon(thinIcon, "number-three-thin") }
func PiNumberTwoThin() icons.IsIcon           { return newIcon(thinIcon, "number-two-thin") }
func PiNumberZeroThin() icons.IsIcon          { return newIcon(thinIcon, "number-zero-thin") }
func PiNumpadThin() icons.IsIcon              { return newIcon(thinIcon, "numpad-thin") }
func PiNutThin() icons.IsIcon                 { return newIcon(thinIcon, "nut-thin") }
func PiNyTimesLogoThin() icons.IsIcon         { return newIcon(thinIcon, "ny-times-logo-thin") }
func PiOctagonThin() icons.IsIcon             { return newIcon(thinIcon, "octagon-thin") }
func PiOfficeChairThin() icons.IsIcon         { return newIcon(thinIcon, "office-chair-thin") }
func PiOnigiriThin() icons.IsIcon             { return newIcon(thinIcon, "onigiri-thin") }
func PiOpenAiLogoThin() icons.IsIcon          { return newIcon(thinIcon, "open-ai-logo-thin") }
func PiOptionThin() icons.IsIcon              { return newIcon(thinIcon, "option-thin") }
func PiOrangeSliceThin() icons.IsIcon         { return newIcon(thinIcon, "orange-slice-thin") }
func PiOrangeThin() icons.IsIcon              { return newIcon(thinIcon, "orange-thin") }
func PiOvenThin() icons.IsIcon                { return newIcon(thinIcon, "oven-thin") }
func PiPackageThin() icons.IsIcon             { return newIcon(thinIcon, "package-thin") }
func PiPaintBrushBroadThin() icons.IsIcon     { return newIcon(thinIcon, "paint-brush-broad-thin") }
func PiPaintBrushHouseholdThin() icons.IsIcon { return newIcon(thinIcon, "paint-brush-household-thin") }
func PiPaintBrushThin() icons.IsIcon          { return newIcon(thinIcon, "paint-brush-thin") }
func PiPaintBucketThin() icons.IsIcon         { return newIcon(thinIcon, "paint-bucket-thin") }
func PiPaintRollerThin() icons.IsIcon         { return newIcon(thinIcon, "paint-roller-thin") }
func PiPaletteThin() icons.IsIcon             { return newIcon(thinIcon, "palette-thin") }
func PiPanoramaThin() icons.IsIcon            { return newIcon(thinIcon, "panorama-thin") }
func PiPantsThin() icons.IsIcon               { return newIcon(thinIcon, "pants-thin") }
func PiPaperPlaneRightThin() icons.IsIcon     { return newIcon(thinIcon, "paper-plane-right-thin") }
func PiPaperPlaneThin() icons.IsIcon          { return newIcon(thinIcon, "paper-plane-thin") }
func PiPaperPlaneTiltThin() icons.IsIcon      { return newIcon(thinIcon, "paper-plane-tilt-thin") }
func PiPaperclipHorizontalThin() icons.IsIcon { return newIcon(thinIcon, "paperclip-horizontal-thin") }
func PiPaperclipThin() icons.IsIcon           { return newIcon(thinIcon, "paperclip-thin") }
func PiParachuteThin() icons.IsIcon           { return newIcon(thinIcon, "parachute-thin") }
func PiParagraphThin() icons.IsIcon           { return newIcon(thinIcon, "paragraph-thin") }
func PiParallelogramThin() icons.IsIcon       { return newIcon(thinIcon, "parallelogram-thin") }
func PiParkThin() icons.IsIcon                { return newIcon(thinIcon, "park-thin") }
func PiPasswordThin() icons.IsIcon            { return newIcon(thinIcon, "password-thin") }
func PiPathThin() icons.IsIcon                { return newIcon(thinIcon, "path-thin") }
func PiPatreonLogoThin() icons.IsIcon         { return newIcon(thinIcon, "patreon-logo-thin") }
func PiPauseCircleThin() icons.IsIcon         { return newIcon(thinIcon, "pause-circle-thin") }
func PiPauseThin() icons.IsIcon               { return newIcon(thinIcon, "pause-thin") }
func PiPawPrintThin() icons.IsIcon            { return newIcon(thinIcon, "paw-print-thin") }
func PiPaypalLogoThin() icons.IsIcon          { return newIcon(thinIcon, "paypal-logo-thin") }
func PiPeaceThin() icons.IsIcon               { return newIcon(thinIcon, "peace-thin") }
func PiPenNibStraightThin() icons.IsIcon      { return newIcon(thinIcon, "pen-nib-straight-thin") }
func PiPenNibThin() icons.IsIcon              { return newIcon(thinIcon, "pen-nib-thin") }
func PiPenThin() icons.IsIcon                 { return newIcon(thinIcon, "pen-thin") }
func PiPencilCircleThin() icons.IsIcon        { return newIcon(thinIcon, "pencil-circle-thin") }
func PiPencilLineThin() icons.IsIcon          { return newIcon(thinIcon, "pencil-line-thin") }
func PiPencilRulerThin() icons.IsIcon         { return newIcon(thinIcon, "pencil-ruler-thin") }
func PiPencilSimpleLineThin() icons.IsIcon    { return newIcon(thinIcon, "pencil-simple-line-thin") }
func PiPencilSimpleSlashThin() icons.IsIcon   { return newIcon(thinIcon, "pencil-simple-slash-thin") }
func PiPencilSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "pencil-simple-thin") }
func PiPencilSlashThin() icons.IsIcon         { return newIcon(thinIcon, "pencil-slash-thin") }
func PiPencilThin() icons.IsIcon              { return newIcon(thinIcon, "pencil-thin") }
func PiPentagonThin() icons.IsIcon            { return newIcon(thinIcon, "pentagon-thin") }
func PiPentagramThin() icons.IsIcon           { return newIcon(thinIcon, "pentagram-thin") }
func PiPepperThin() icons.IsIcon              { return newIcon(thinIcon, "pepper-thin") }
func PiPercentThin() icons.IsIcon             { return newIcon(thinIcon, "percent-thin") }
func PiPersonArmsSpreadThin() icons.IsIcon    { return newIcon(thinIcon, "person-arms-spread-thin") }
func PiPersonSimpleBikeThin() icons.IsIcon    { return newIcon(thinIcon, "person-simple-bike-thin") }
func PiPersonSimpleCircleThin() icons.IsIcon  { return newIcon(thinIcon, "person-simple-circle-thin") }
func PiPersonSimpleHikeThin() icons.IsIcon    { return newIcon(thinIcon, "person-simple-hike-thin") }
func PiPersonSimpleRunThin() icons.IsIcon     { return newIcon(thinIcon, "person-simple-run-thin") }
func PiPersonSimpleSkiThin() icons.IsIcon     { return newIcon(thinIcon, "person-simple-ski-thin") }
func PiPersonSimpleSnowboardThin() icons.IsIcon {
	return newIcon(thinIcon, "person-simple-snowboard-thin")
}
func PiPersonSimpleSwimThin() icons.IsIcon   { return newIcon(thinIcon, "person-simple-swim-thin") }
func PiPersonSimpleTaiChiThin() icons.IsIcon { return newIcon(thinIcon, "person-simple-tai-chi-thin") }
func PiPersonSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "person-simple-thin") }
func PiPersonSimpleThrowThin() icons.IsIcon  { return newIcon(thinIcon, "person-simple-throw-thin") }
func PiPersonSimpleWalkThin() icons.IsIcon   { return newIcon(thinIcon, "person-simple-walk-thin") }
func PiPersonThin() icons.IsIcon             { return newIcon(thinIcon, "person-thin") }
func PiPerspectiveThin() icons.IsIcon        { return newIcon(thinIcon, "perspective-thin") }
func PiPhoneCallThin() icons.IsIcon          { return newIcon(thinIcon, "phone-call-thin") }
func PiPhoneDisconnectThin() icons.IsIcon    { return newIcon(thinIcon, "phone-disconnect-thin") }
func PiPhoneIncomingThin() icons.IsIcon      { return newIcon(thinIcon, "phone-incoming-thin") }
func PiPhoneListThin() icons.IsIcon          { return newIcon(thinIcon, "phone-list-thin") }
func PiPhoneOutgoingThin() icons.IsIcon      { return newIcon(thinIcon, "phone-outgoing-thin") }
func PiPhonePauseThin() icons.IsIcon         { return newIcon(thinIcon, "phone-pause-thin") }
func PiPhonePlusThin() icons.IsIcon          { return newIcon(thinIcon, "phone-plus-thin") }
func PiPhoneSlashThin() icons.IsIcon         { return newIcon(thinIcon, "phone-slash-thin") }
func PiPhoneThin() icons.IsIcon              { return newIcon(thinIcon, "phone-thin") }
func PiPhoneTransferThin() icons.IsIcon      { return newIcon(thinIcon, "phone-transfer-thin") }
func PiPhoneXThin() icons.IsIcon             { return newIcon(thinIcon, "phone-x-thin") }
func PiPhosphorLogoThin() icons.IsIcon       { return newIcon(thinIcon, "phosphor-logo-thin") }
func PiPiThin() icons.IsIcon                 { return newIcon(thinIcon, "pi-thin") }
func PiPianoKeysThin() icons.IsIcon          { return newIcon(thinIcon, "piano-keys-thin") }
func PiPicnicTableThin() icons.IsIcon        { return newIcon(thinIcon, "picnic-table-thin") }
func PiPictureInPictureThin() icons.IsIcon   { return newIcon(thinIcon, "picture-in-picture-thin") }
func PiPiggyBankThin() icons.IsIcon          { return newIcon(thinIcon, "piggy-bank-thin") }
func PiPillThin() icons.IsIcon               { return newIcon(thinIcon, "pill-thin") }
func PiPingPongThin() icons.IsIcon           { return newIcon(thinIcon, "ping-pong-thin") }
func PiPintGlassThin() icons.IsIcon          { return newIcon(thinIcon, "pint-glass-thin") }
func PiPinterestLogoThin() icons.IsIcon      { return newIcon(thinIcon, "pinterest-logo-thin") }
func PiPinwheelThin() icons.IsIcon           { return newIcon(thinIcon, "pinwheel-thin") }
func PiPipeThin() icons.IsIcon               { return newIcon(thinIcon, "pipe-thin") }
func PiPipeWrenchThin() icons.IsIcon         { return newIcon(thinIcon, "pipe-wrench-thin") }
func PiPixLogoThin() icons.IsIcon            { return newIcon(thinIcon, "pix-logo-thin") }
func PiPizzaThin() icons.IsIcon              { return newIcon(thinIcon, "pizza-thin") }
func PiPlaceholderThin() icons.IsIcon        { return newIcon(thinIcon, "placeholder-thin") }
func PiPlanetThin() icons.IsIcon             { return newIcon(thinIcon, "planet-thin") }
func PiPlantThin() icons.IsIcon              { return newIcon(thinIcon, "plant-thin") }
func PiPlayCircleThin() icons.IsIcon         { return newIcon(thinIcon, "play-circle-thin") }
func PiPlayPauseThin() icons.IsIcon          { return newIcon(thinIcon, "play-pause-thin") }
func PiPlayThin() icons.IsIcon               { return newIcon(thinIcon, "play-thin") }
func PiPlaylistThin() icons.IsIcon           { return newIcon(thinIcon, "playlist-thin") }
func PiPlugChargingThin() icons.IsIcon       { return newIcon(thinIcon, "plug-charging-thin") }
func PiPlugThin() icons.IsIcon               { return newIcon(thinIcon, "plug-thin") }
func PiPlugsConnectedThin() icons.IsIcon     { return newIcon(thinIcon, "plugs-connected-thin") }
func PiPlugsThin() icons.IsIcon              { return newIcon(thinIcon, "plugs-thin") }
func PiPlusCircleThin() icons.IsIcon         { return newIcon(thinIcon, "plus-circle-thin") }
func PiPlusMinusThin() icons.IsIcon          { return newIcon(thinIcon, "plus-minus-thin") }
func PiPlusSquareThin() icons.IsIcon         { return newIcon(thinIcon, "plus-square-thin") }
func PiPlusThin() icons.IsIcon               { return newIcon(thinIcon, "plus-thin") }
func PiPokerChipThin() icons.IsIcon          { return newIcon(thinIcon, "poker-chip-thin") }
func PiPoliceCarThin() icons.IsIcon          { return newIcon(thinIcon, "police-car-thin") }
func PiPolygonThin() icons.IsIcon            { return newIcon(thinIcon, "polygon-thin") }
func PiPopcornThin() icons.IsIcon            { return newIcon(thinIcon, "popcorn-thin") }
func PiPopsicleThin() icons.IsIcon           { return newIcon(thinIcon, "popsicle-thin") }
func PiPottedPlantThin() icons.IsIcon        { return newIcon(thinIcon, "potted-plant-thin") }
func PiPowerThin() icons.IsIcon              { return newIcon(thinIcon, "power-thin") }
func PiPrescriptionThin() icons.IsIcon       { return newIcon(thinIcon, "prescription-thin") }
func PiPresentationChartThin() icons.IsIcon  { return newIcon(thinIcon, "presentation-chart-thin") }
func PiPresentationThin() icons.IsIcon       { return newIcon(thinIcon, "presentation-thin") }
func PiPrinterThin() icons.IsIcon            { return newIcon(thinIcon, "printer-thin") }
func PiProhibitInsetThin() icons.IsIcon      { return newIcon(thinIcon, "prohibit-inset-thin") }
func PiProhibitThin() icons.IsIcon           { return newIcon(thinIcon, "prohibit-thin") }
func PiProjectorScreenChartThin() icons.IsIcon {
	return newIcon(thinIcon, "projector-screen-chart-thin")
}
func PiProjectorScreenThin() icons.IsIcon     { return newIcon(thinIcon, "projector-screen-thin") }
func PiPulseThin() icons.IsIcon               { return newIcon(thinIcon, "pulse-thin") }
func PiPushPinSimpleSlashThin() icons.IsIcon  { return newIcon(thinIcon, "push-pin-simple-slash-thin") }
func PiPushPinSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "push-pin-simple-thin") }
func PiPushPinSlashThin() icons.IsIcon        { return newIcon(thinIcon, "push-pin-slash-thin") }
func PiPushPinThin() icons.IsIcon             { return newIcon(thinIcon, "push-pin-thin") }
func PiPuzzlePieceThin() icons.IsIcon         { return newIcon(thinIcon, "puzzle-piece-thin") }
func PiQrCodeThin() icons.IsIcon              { return newIcon(thinIcon, "qr-code-thin") }
func PiQuestionMarkThin() icons.IsIcon        { return newIcon(thinIcon, "question-mark-thin") }
func PiQuestionThin() icons.IsIcon            { return newIcon(thinIcon, "question-thin") }
func PiQueueThin() icons.IsIcon               { return newIcon(thinIcon, "queue-thin") }
func PiQuotesThin() icons.IsIcon              { return newIcon(thinIcon, "quotes-thin") }
func PiRabbitThin() icons.IsIcon              { return newIcon(thinIcon, "rabbit-thin") }
func PiRacquetThin() icons.IsIcon             { return newIcon(thinIcon, "racquet-thin") }
func PiRadicalThin() icons.IsIcon             { return newIcon(thinIcon, "radical-thin") }
func PiRadioButtonThin() icons.IsIcon         { return newIcon(thinIcon, "radio-button-thin") }
func PiRadioThin() icons.IsIcon               { return newIcon(thinIcon, "radio-thin") }
func PiRadioactiveThin() icons.IsIcon         { return newIcon(thinIcon, "radioactive-thin") }
func PiRainbowCloudThin() icons.IsIcon        { return newIcon(thinIcon, "rainbow-cloud-thin") }
func PiRainbowThin() icons.IsIcon             { return newIcon(thinIcon, "rainbow-thin") }
func PiRankingThin() icons.IsIcon             { return newIcon(thinIcon, "ranking-thin") }
func PiReadCvLogoThin() icons.IsIcon          { return newIcon(thinIcon, "read-cv-logo-thin") }
func PiReceiptThin() icons.IsIcon             { return newIcon(thinIcon, "receipt-thin") }
func PiReceiptXThin() icons.IsIcon            { return newIcon(thinIcon, "receipt-x-thin") }
func PiRecordThin() icons.IsIcon              { return newIcon(thinIcon, "record-thin") }
func PiRectangleDashedThin() icons.IsIcon     { return newIcon(thinIcon, "rectangle-dashed-thin") }
func PiRectangleThin() icons.IsIcon           { return newIcon(thinIcon, "rectangle-thin") }
func PiRecycleThin() icons.IsIcon             { return newIcon(thinIcon, "recycle-thin") }
func PiRedditLogoThin() icons.IsIcon          { return newIcon(thinIcon, "reddit-logo-thin") }
func PiRepeatOnceThin() icons.IsIcon          { return newIcon(thinIcon, "repeat-once-thin") }
func PiRepeatThin() icons.IsIcon              { return newIcon(thinIcon, "repeat-thin") }
func PiReplitLogoThin() icons.IsIcon          { return newIcon(thinIcon, "replit-logo-thin") }
func PiResizeThin() icons.IsIcon              { return newIcon(thinIcon, "resize-thin") }
func PiRewindCircleThin() icons.IsIcon        { return newIcon(thinIcon, "rewind-circle-thin") }
func PiRewindThin() icons.IsIcon              { return newIcon(thinIcon, "rewind-thin") }
func PiRoadHorizonThin() icons.IsIcon         { return newIcon(thinIcon, "road-horizon-thin") }
func PiRobotThin() icons.IsIcon               { return newIcon(thinIcon, "robot-thin") }
func PiRocketLaunchThin() icons.IsIcon        { return newIcon(thinIcon, "rocket-launch-thin") }
func PiRocketThin() icons.IsIcon              { return newIcon(thinIcon, "rocket-thin") }
func PiRowsPlusBottomThin() icons.IsIcon      { return newIcon(thinIcon, "rows-plus-bottom-thin") }
func PiRowsPlusTopThin() icons.IsIcon         { return newIcon(thinIcon, "rows-plus-top-thin") }
func PiRowsThin() icons.IsIcon                { return newIcon(thinIcon, "rows-thin") }
func PiRssSimpleThin() icons.IsIcon           { return newIcon(thinIcon, "rss-simple-thin") }
func PiRssThin() icons.IsIcon                 { return newIcon(thinIcon, "rss-thin") }
func PiRugThin() icons.IsIcon                 { return newIcon(thinIcon, "rug-thin") }
func PiRulerThin() icons.IsIcon               { return newIcon(thinIcon, "ruler-thin") }
func PiSailboatThin() icons.IsIcon            { return newIcon(thinIcon, "sailboat-thin") }
func PiScalesThin() icons.IsIcon              { return newIcon(thinIcon, "scales-thin") }
func PiScanSmileyThin() icons.IsIcon          { return newIcon(thinIcon, "scan-smiley-thin") }
func PiScanThin() icons.IsIcon                { return newIcon(thinIcon, "scan-thin") }
func PiScissorsThin() icons.IsIcon            { return newIcon(thinIcon, "scissors-thin") }
func PiScooterThin() icons.IsIcon             { return newIcon(thinIcon, "scooter-thin") }
func PiScreencastThin() icons.IsIcon          { return newIcon(thinIcon, "screencast-thin") }
func PiScrewdriverThin() icons.IsIcon         { return newIcon(thinIcon, "screwdriver-thin") }
func PiScribbleLoopThin() icons.IsIcon        { return newIcon(thinIcon, "scribble-loop-thin") }
func PiScribbleThin() icons.IsIcon            { return newIcon(thinIcon, "scribble-thin") }
func PiScrollThin() icons.IsIcon              { return newIcon(thinIcon, "scroll-thin") }
func PiSealCheckThin() icons.IsIcon           { return newIcon(thinIcon, "seal-check-thin") }
func PiSealPercentThin() icons.IsIcon         { return newIcon(thinIcon, "seal-percent-thin") }
func PiSealQuestionThin() icons.IsIcon        { return newIcon(thinIcon, "seal-question-thin") }
func PiSealThin() icons.IsIcon                { return newIcon(thinIcon, "seal-thin") }
func PiSealWarningThin() icons.IsIcon         { return newIcon(thinIcon, "seal-warning-thin") }
func PiSeatThin() icons.IsIcon                { return newIcon(thinIcon, "seat-thin") }
func PiSeatbeltThin() icons.IsIcon            { return newIcon(thinIcon, "seatbelt-thin") }
func PiSecurityCameraThin() icons.IsIcon      { return newIcon(thinIcon, "security-camera-thin") }
func PiSelectionAllThin() icons.IsIcon        { return newIcon(thinIcon, "selection-all-thin") }
func PiSelectionBackgroundThin() icons.IsIcon { return newIcon(thinIcon, "selection-background-thin") }
func PiSelectionForegroundThin() icons.IsIcon { return newIcon(thinIcon, "selection-foreground-thin") }
func PiSelectionInverseThin() icons.IsIcon    { return newIcon(thinIcon, "selection-inverse-thin") }
func PiSelectionPlusThin() icons.IsIcon       { return newIcon(thinIcon, "selection-plus-thin") }
func PiSelectionSlashThin() icons.IsIcon      { return newIcon(thinIcon, "selection-slash-thin") }
func PiSelectionThin() icons.IsIcon           { return newIcon(thinIcon, "selection-thin") }
func PiShapesThin() icons.IsIcon              { return newIcon(thinIcon, "shapes-thin") }
func PiShareFatThin() icons.IsIcon            { return newIcon(thinIcon, "share-fat-thin") }
func PiShareNetworkThin() icons.IsIcon        { return newIcon(thinIcon, "share-network-thin") }
func PiShareThin() icons.IsIcon               { return newIcon(thinIcon, "share-thin") }
func PiShieldCheckThin() icons.IsIcon         { return newIcon(thinIcon, "shield-check-thin") }
func PiShieldCheckeredThin() icons.IsIcon     { return newIcon(thinIcon, "shield-checkered-thin") }
func PiShieldChevronThin() icons.IsIcon       { return newIcon(thinIcon, "shield-chevron-thin") }
func PiShieldPlusThin() icons.IsIcon          { return newIcon(thinIcon, "shield-plus-thin") }
func PiShieldSlashThin() icons.IsIcon         { return newIcon(thinIcon, "shield-slash-thin") }
func PiShieldStarThin() icons.IsIcon          { return newIcon(thinIcon, "shield-star-thin") }
func PiShieldThin() icons.IsIcon              { return newIcon(thinIcon, "shield-thin") }
func PiShieldWarningThin() icons.IsIcon       { return newIcon(thinIcon, "shield-warning-thin") }
func PiShippingContainerThin() icons.IsIcon   { return newIcon(thinIcon, "shipping-container-thin") }
func PiShirtFoldedThin() icons.IsIcon         { return newIcon(thinIcon, "shirt-folded-thin") }
func PiShootingStarThin() icons.IsIcon        { return newIcon(thinIcon, "shooting-star-thin") }
func PiShoppingBagOpenThin() icons.IsIcon     { return newIcon(thinIcon, "shopping-bag-open-thin") }
func PiShoppingBagThin() icons.IsIcon         { return newIcon(thinIcon, "shopping-bag-thin") }
func PiShoppingCartSimpleThin() icons.IsIcon  { return newIcon(thinIcon, "shopping-cart-simple-thin") }
func PiShoppingCartThin() icons.IsIcon        { return newIcon(thinIcon, "shopping-cart-thin") }
func PiShovelThin() icons.IsIcon              { return newIcon(thinIcon, "shovel-thin") }
func PiShowerThin() icons.IsIcon              { return newIcon(thinIcon, "shower-thin") }
func PiShrimpThin() icons.IsIcon              { return newIcon(thinIcon, "shrimp-thin") }
func PiShuffleAngularThin() icons.IsIcon      { return newIcon(thinIcon, "shuffle-angular-thin") }
func PiShuffleSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "shuffle-simple-thin") }
func PiShuffleThin() icons.IsIcon             { return newIcon(thinIcon, "shuffle-thin") }
func PiSidebarSimpleThin() icons.IsIcon       { return newIcon(thinIcon, "sidebar-simple-thin") }
func PiSidebarThin() icons.IsIcon             { return newIcon(thinIcon, "sidebar-thin") }
func PiSigmaThin() icons.IsIcon               { return newIcon(thinIcon, "sigma-thin") }
func PiSignInThin() icons.IsIcon              { return newIcon(thinIcon, "sign-in-thin") }
func PiSignOutThin() icons.IsIcon             { return newIcon(thinIcon, "sign-out-thin") }
func PiSignatureThin() icons.IsIcon           { return newIcon(thinIcon, "signature-thin") }
func PiSignpostThin() icons.IsIcon            { return newIcon(thinIcon, "signpost-thin") }
func PiSimCardThin() icons.IsIcon             { return newIcon(thinIcon, "sim-card-thin") }
func PiSirenThin() icons.IsIcon               { return newIcon(thinIcon, "siren-thin") }
func PiSketchLogoThin() icons.IsIcon          { return newIcon(thinIcon, "sketch-logo-thin") }
func PiSkipBackCircleThin() icons.IsIcon      { return newIcon(thinIcon, "skip-back-circle-thin") }
func PiSkipBackThin() icons.IsIcon            { return newIcon(thinIcon, "skip-back-thin") }
func PiSkipForwardCircleThin() icons.IsIcon   { return newIcon(thinIcon, "skip-forward-circle-thin") }
func PiSkipForwardThin() icons.IsIcon         { return newIcon(thinIcon, "skip-forward-thin") }
func PiSkullThin() icons.IsIcon               { return newIcon(thinIcon, "skull-thin") }
func PiSkypeLogoThin() icons.IsIcon           { return newIcon(thinIcon, "skype-logo-thin") }
func PiSlackLogoThin() icons.IsIcon           { return newIcon(thinIcon, "slack-logo-thin") }
func PiSlidersHorizontalThin() icons.IsIcon   { return newIcon(thinIcon, "sliders-horizontal-thin") }
func PiSlidersThin() icons.IsIcon             { return newIcon(thinIcon, "sliders-thin") }
func PiSlideshowThin() icons.IsIcon           { return newIcon(thinIcon, "slideshow-thin") }
func PiSmileyAngryThin() icons.IsIcon         { return newIcon(thinIcon, "smiley-angry-thin") }
func PiSmileyBlankThin() icons.IsIcon         { return newIcon(thinIcon, "smiley-blank-thin") }
func PiSmileyMehThin() icons.IsIcon           { return newIcon(thinIcon, "smiley-meh-thin") }
func PiSmileyMeltingThin() icons.IsIcon       { return newIcon(thinIcon, "smiley-melting-thin") }
func PiSmileyNervousThin() icons.IsIcon       { return newIcon(thinIcon, "smiley-nervous-thin") }
func PiSmileySadThin() icons.IsIcon           { return newIcon(thinIcon, "smiley-sad-thin") }
func PiSmileyStickerThin() icons.IsIcon       { return newIcon(thinIcon, "smiley-sticker-thin") }
func PiSmileyThin() icons.IsIcon              { return newIcon(thinIcon, "smiley-thin") }
func PiSmileyWinkThin() icons.IsIcon          { return newIcon(thinIcon, "smiley-wink-thin") }
func PiSmileyXEyesThin() icons.IsIcon         { return newIcon(thinIcon, "smiley-x-eyes-thin") }
func PiSnapchatLogoThin() icons.IsIcon        { return newIcon(thinIcon, "snapchat-logo-thin") }
func PiSneakerMoveThin() icons.IsIcon         { return newIcon(thinIcon, "sneaker-move-thin") }
func PiSneakerThin() icons.IsIcon             { return newIcon(thinIcon, "sneaker-thin") }
func PiSnowflakeThin() icons.IsIcon           { return newIcon(thinIcon, "snowflake-thin") }
func PiSoccerBallThin() icons.IsIcon          { return newIcon(thinIcon, "soccer-ball-thin") }
func PiSockThin() icons.IsIcon                { return newIcon(thinIcon, "sock-thin") }
func PiSolarPanelThin() icons.IsIcon          { return newIcon(thinIcon, "solar-panel-thin") }
func PiSolarRoofThin() icons.IsIcon           { return newIcon(thinIcon, "solar-roof-thin") }
func PiSortAscendingThin() icons.IsIcon       { return newIcon(thinIcon, "sort-ascending-thin") }
func PiSortDescendingThin() icons.IsIcon      { return newIcon(thinIcon, "sort-descending-thin") }
func PiSoundcloudLogoThin() icons.IsIcon      { return newIcon(thinIcon, "soundcloud-logo-thin") }
func PiSpadeThin() icons.IsIcon               { return newIcon(thinIcon, "spade-thin") }
func PiSparkleThin() icons.IsIcon             { return newIcon(thinIcon, "sparkle-thin") }
func PiSpeakerHifiThin() icons.IsIcon         { return newIcon(thinIcon, "speaker-hifi-thin") }
func PiSpeakerHighThin() icons.IsIcon         { return newIcon(thinIcon, "speaker-high-thin") }
func PiSpeakerLowThin() icons.IsIcon          { return newIcon(thinIcon, "speaker-low-thin") }
func PiSpeakerNoneThin() icons.IsIcon         { return newIcon(thinIcon, "speaker-none-thin") }
func PiSpeakerSimpleHighThin() icons.IsIcon   { return newIcon(thinIcon, "speaker-simple-high-thin") }
func PiSpeakerSimpleLowThin() icons.IsIcon    { return newIcon(thinIcon, "speaker-simple-low-thin") }
func PiSpeakerSimpleNoneThin() icons.IsIcon   { return newIcon(thinIcon, "speaker-simple-none-thin") }
func PiSpeakerSimpleSlashThin() icons.IsIcon  { return newIcon(thinIcon, "speaker-simple-slash-thin") }
func PiSpeakerSimpleXThin() icons.IsIcon      { return newIcon(thinIcon, "speaker-simple-x-thin") }
func PiSpeakerSlashThin() icons.IsIcon        { return newIcon(thinIcon, "speaker-slash-thin") }
func PiSpeakerXThin() icons.IsIcon            { return newIcon(thinIcon, "speaker-x-thin") }
func PiSpeedometerThin() icons.IsIcon         { return newIcon(thinIcon, "speedometer-thin") }
func PiSphereThin() icons.IsIcon              { return newIcon(thinIcon, "sphere-thin") }
func PiSpinnerBallThin() icons.IsIcon         { return newIcon(thinIcon, "spinner-ball-thin") }
func PiSpinnerGapThin() icons.IsIcon          { return newIcon(thinIcon, "spinner-gap-thin") }
func PiSpinnerThin() icons.IsIcon             { return newIcon(thinIcon, "spinner-thin") }
func PiSpiralThin() icons.IsIcon              { return newIcon(thinIcon, "spiral-thin") }
func PiSplitHorizontalThin() icons.IsIcon     { return newIcon(thinIcon, "split-horizontal-thin") }
func PiSplitVerticalThin() icons.IsIcon       { return newIcon(thinIcon, "split-vertical-thin") }
func PiSpotifyLogoThin() icons.IsIcon         { return newIcon(thinIcon, "spotify-logo-thin") }
func PiSprayBottleThin() icons.IsIcon         { return newIcon(thinIcon, "spray-bottle-thin") }
func PiSquareHalfBottomThin() icons.IsIcon    { return newIcon(thinIcon, "square-half-bottom-thin") }
func PiSquareHalfThin() icons.IsIcon          { return newIcon(thinIcon, "square-half-thin") }
func PiSquareLogoThin() icons.IsIcon          { return newIcon(thinIcon, "square-logo-thin") }
func PiSquareSplitHorizontalThin() icons.IsIcon {
	return newIcon(thinIcon, "square-split-horizontal-thin")
}
func PiSquareSplitVerticalThin() icons.IsIcon { return newIcon(thinIcon, "square-split-vertical-thin") }
func PiSquareThin() icons.IsIcon              { return newIcon(thinIcon, "square-thin") }
func PiSquaresFourThin() icons.IsIcon         { return newIcon(thinIcon, "squares-four-thin") }
func PiStackMinusThin() icons.IsIcon          { return newIcon(thinIcon, "stack-minus-thin") }
func PiStackOverflowLogoThin() icons.IsIcon   { return newIcon(thinIcon, "stack-overflow-logo-thin") }
func PiStackPlusThin() icons.IsIcon           { return newIcon(thinIcon, "stack-plus-thin") }
func PiStackSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "stack-simple-thin") }
func PiStackThin() icons.IsIcon               { return newIcon(thinIcon, "stack-thin") }
func PiStairsThin() icons.IsIcon              { return newIcon(thinIcon, "stairs-thin") }
func PiStampThin() icons.IsIcon               { return newIcon(thinIcon, "stamp-thin") }
func PiStandardDefinitionThin() icons.IsIcon  { return newIcon(thinIcon, "standard-definition-thin") }
func PiStarAndCrescentThin() icons.IsIcon     { return newIcon(thinIcon, "star-and-crescent-thin") }
func PiStarFourThin() icons.IsIcon            { return newIcon(thinIcon, "star-four-thin") }
func PiStarHalfThin() icons.IsIcon            { return newIcon(thinIcon, "star-half-thin") }
func PiStarOfDavidThin() icons.IsIcon         { return newIcon(thinIcon, "star-of-david-thin") }
func PiStarThin() icons.IsIcon                { return newIcon(thinIcon, "star-thin") }
func PiSteamLogoThin() icons.IsIcon           { return newIcon(thinIcon, "steam-logo-thin") }
func PiSteeringWheelThin() icons.IsIcon       { return newIcon(thinIcon, "steering-wheel-thin") }
func PiStepsThin() icons.IsIcon               { return newIcon(thinIcon, "steps-thin") }
func PiStethoscopeThin() icons.IsIcon         { return newIcon(thinIcon, "stethoscope-thin") }
func PiStickerThin() icons.IsIcon             { return newIcon(thinIcon, "sticker-thin") }
func PiStoolThin() icons.IsIcon               { return newIcon(thinIcon, "stool-thin") }
func PiStopCircleThin() icons.IsIcon          { return newIcon(thinIcon, "stop-circle-thin") }
func PiStopThin() icons.IsIcon                { return newIcon(thinIcon, "stop-thin") }
func PiStorefrontThin() icons.IsIcon          { return newIcon(thinIcon, "storefront-thin") }
func PiStrategyThin() icons.IsIcon            { return newIcon(thinIcon, "strategy-thin") }
func PiStripeLogoThin() icons.IsIcon          { return newIcon(thinIcon, "stripe-logo-thin") }
func PiStudentThin() icons.IsIcon             { return newIcon(thinIcon, "student-thin") }
func PiSubsetOfThin() icons.IsIcon            { return newIcon(thinIcon, "subset-of-thin") }
func PiSubsetProperOfThin() icons.IsIcon      { return newIcon(thinIcon, "subset-proper-of-thin") }
func PiSubtitlesSlashThin() icons.IsIcon      { return newIcon(thinIcon, "subtitles-slash-thin") }
func PiSubtitlesThin() icons.IsIcon           { return newIcon(thinIcon, "subtitles-thin") }
func PiSubtractSquareThin() icons.IsIcon      { return newIcon(thinIcon, "subtract-square-thin") }
func PiSubtractThin() icons.IsIcon            { return newIcon(thinIcon, "subtract-thin") }
func PiSubwayThin() icons.IsIcon              { return newIcon(thinIcon, "subway-thin") }
func PiSuitcaseRollingThin() icons.IsIcon     { return newIcon(thinIcon, "suitcase-rolling-thin") }
func PiSuitcaseSimpleThin() icons.IsIcon      { return newIcon(thinIcon, "suitcase-simple-thin") }
func PiSuitcaseThin() icons.IsIcon            { return newIcon(thinIcon, "suitcase-thin") }
func PiSunDimThin() icons.IsIcon              { return newIcon(thinIcon, "sun-dim-thin") }
func PiSunHorizonThin() icons.IsIcon          { return newIcon(thinIcon, "sun-horizon-thin") }
func PiSunThin() icons.IsIcon                 { return newIcon(thinIcon, "sun-thin") }
func PiSunglassesThin() icons.IsIcon          { return newIcon(thinIcon, "sunglasses-thin") }
func PiSupersetOfThin() icons.IsIcon          { return newIcon(thinIcon, "superset-of-thin") }
func PiSupersetProperOfThin() icons.IsIcon    { return newIcon(thinIcon, "superset-proper-of-thin") }
func PiSwapThin() icons.IsIcon                { return newIcon(thinIcon, "swap-thin") }
func PiSwatchesThin() icons.IsIcon            { return newIcon(thinIcon, "swatches-thin") }
func PiSwimmingPoolThin() icons.IsIcon        { return newIcon(thinIcon, "swimming-pool-thin") }
func PiSwordThin() icons.IsIcon               { return newIcon(thinIcon, "sword-thin") }
func PiSynagogueThin() icons.IsIcon           { return newIcon(thinIcon, "synagogue-thin") }
func PiSyringeThin() icons.IsIcon             { return newIcon(thinIcon, "syringe-thin") }
func PiTShirtThin() icons.IsIcon              { return newIcon(thinIcon, "t-shirt-thin") }
func PiTableThin() icons.IsIcon               { return newIcon(thinIcon, "table-thin") }
func PiTabsThin() icons.IsIcon                { return newIcon(thinIcon, "tabs-thin") }
func PiTagChevronThin() icons.IsIcon          { return newIcon(thinIcon, "tag-chevron-thin") }
func PiTagSimpleThin() icons.IsIcon           { return newIcon(thinIcon, "tag-simple-thin") }
func PiTagThin() icons.IsIcon                 { return newIcon(thinIcon, "tag-thin") }
func PiTargetThin() icons.IsIcon              { return newIcon(thinIcon, "target-thin") }
func PiTaxiThin() icons.IsIcon                { return newIcon(thinIcon, "taxi-thin") }
func PiTeaBagThin() icons.IsIcon              { return newIcon(thinIcon, "tea-bag-thin") }
func PiTelegramLogoThin() icons.IsIcon        { return newIcon(thinIcon, "telegram-logo-thin") }
func PiTelevisionSimpleThin() icons.IsIcon    { return newIcon(thinIcon, "television-simple-thin") }
func PiTelevisionThin() icons.IsIcon          { return newIcon(thinIcon, "television-thin") }
func PiTennisBallThin() icons.IsIcon          { return newIcon(thinIcon, "tennis-ball-thin") }
func PiTentThin() icons.IsIcon                { return newIcon(thinIcon, "tent-thin") }
func PiTerminalThin() icons.IsIcon            { return newIcon(thinIcon, "terminal-thin") }
func PiTerminalWindowThin() icons.IsIcon      { return newIcon(thinIcon, "terminal-window-thin") }
func PiTestTubeThin() icons.IsIcon            { return newIcon(thinIcon, "test-tube-thin") }
func PiTextAUnderlineThin() icons.IsIcon      { return newIcon(thinIcon, "text-a-underline-thin") }
func PiTextAaThin() icons.IsIcon              { return newIcon(thinIcon, "text-aa-thin") }
func PiTextAlignCenterThin() icons.IsIcon     { return newIcon(thinIcon, "text-align-center-thin") }
func PiTextAlignJustifyThin() icons.IsIcon    { return newIcon(thinIcon, "text-align-justify-thin") }
func PiTextAlignLeftThin() icons.IsIcon       { return newIcon(thinIcon, "text-align-left-thin") }
func PiTextAlignRightThin() icons.IsIcon      { return newIcon(thinIcon, "text-align-right-thin") }
func PiTextBThin() icons.IsIcon               { return newIcon(thinIcon, "text-b-thin") }
func PiTextColumnsThin() icons.IsIcon         { return newIcon(thinIcon, "text-columns-thin") }
func PiTextHFiveThin() icons.IsIcon           { return newIcon(thinIcon, "text-h-five-thin") }
func PiTextHFourThin() icons.IsIcon           { return newIcon(thinIcon, "text-h-four-thin") }
func PiTextHOneThin() icons.IsIcon            { return newIcon(thinIcon, "text-h-one-thin") }
func PiTextHSixThin() icons.IsIcon            { return newIcon(thinIcon, "text-h-six-thin") }
func PiTextHThin() icons.IsIcon               { return newIcon(thinIcon, "text-h-thin") }
func PiTextHThreeThin() icons.IsIcon          { return newIcon(thinIcon, "text-h-three-thin") }
func PiTextHTwoThin() icons.IsIcon            { return newIcon(thinIcon, "text-h-two-thin") }
func PiTextIndentThin() icons.IsIcon          { return newIcon(thinIcon, "text-indent-thin") }
func PiTextItalicThin() icons.IsIcon          { return newIcon(thinIcon, "text-italic-thin") }
func PiTextOutdentThin() icons.IsIcon         { return newIcon(thinIcon, "text-outdent-thin") }
func PiTextStrikethroughThin() icons.IsIcon   { return newIcon(thinIcon, "text-strikethrough-thin") }
func PiTextSubscriptThin() icons.IsIcon       { return newIcon(thinIcon, "text-subscript-thin") }
func PiTextSuperscriptThin() icons.IsIcon     { return newIcon(thinIcon, "text-superscript-thin") }
func PiTextTSlashThin() icons.IsIcon          { return newIcon(thinIcon, "text-t-slash-thin") }
func PiTextTThin() icons.IsIcon               { return newIcon(thinIcon, "text-t-thin") }
func PiTextUnderlineThin() icons.IsIcon       { return newIcon(thinIcon, "text-underline-thin") }
func PiTextboxThin() icons.IsIcon             { return newIcon(thinIcon, "textbox-thin") }
func PiThermometerColdThin() icons.IsIcon     { return newIcon(thinIcon, "thermometer-cold-thin") }
func PiThermometerHotThin() icons.IsIcon      { return newIcon(thinIcon, "thermometer-hot-thin") }
func PiThermometerSimpleThin() icons.IsIcon   { return newIcon(thinIcon, "thermometer-simple-thin") }
func PiThermometerThin() icons.IsIcon         { return newIcon(thinIcon, "thermometer-thin") }
func PiThreadsLogoThin() icons.IsIcon         { return newIcon(thinIcon, "threads-logo-thin") }
func PiThreeDThin() icons.IsIcon              { return newIcon(thinIcon, "three-d-thin") }
func PiThumbsDownThin() icons.IsIcon          { return newIcon(thinIcon, "thumbs-down-thin") }
func PiThumbsUpThin() icons.IsIcon            { return newIcon(thinIcon, "thumbs-up-thin") }
func PiTicketThin() icons.IsIcon              { return newIcon(thinIcon, "ticket-thin") }
func PiTidalLogoThin() icons.IsIcon           { return newIcon(thinIcon, "tidal-logo-thin") }
func PiTiktokLogoThin() icons.IsIcon          { return newIcon(thinIcon, "tiktok-logo-thin") }
func PiTildeThin() icons.IsIcon               { return newIcon(thinIcon, "tilde-thin") }
func PiTimerThin() icons.IsIcon               { return newIcon(thinIcon, "timer-thin") }
func PiTipJarThin() icons.IsIcon              { return newIcon(thinIcon, "tip-jar-thin") }
func PiTipiThin() icons.IsIcon                { return newIcon(thinIcon, "tipi-thin") }
func PiTireThin() icons.IsIcon                { return newIcon(thinIcon, "tire-thin") }
func PiToggleLeftThin() icons.IsIcon          { return newIcon(thinIcon, "toggle-left-thin") }
func PiToggleRightThin() icons.IsIcon         { return newIcon(thinIcon, "toggle-right-thin") }
func PiToiletPaperThin() icons.IsIcon         { return newIcon(thinIcon, "toilet-paper-thin") }
func PiToiletThin() icons.IsIcon              { return newIcon(thinIcon, "toilet-thin") }
func PiToolboxThin() icons.IsIcon             { return newIcon(thinIcon, "toolbox-thin") }
func PiToothThin() icons.IsIcon               { return newIcon(thinIcon, "tooth-thin") }
func PiTornadoThin() icons.IsIcon             { return newIcon(thinIcon, "tornado-thin") }
func PiToteSimpleThin() icons.IsIcon          { return newIcon(thinIcon, "tote-simple-thin") }
func PiToteThin() icons.IsIcon                { return newIcon(thinIcon, "tote-thin") }
func PiTowelThin() icons.IsIcon               { return newIcon(thinIcon, "towel-thin") }
func PiTractorThin() icons.IsIcon             { return newIcon(thinIcon, "tractor-thin") }
func PiTrademarkRegisteredThin() icons.IsIcon { return newIcon(thinIcon, "trademark-registered-thin") }
func PiTrademarkThin() icons.IsIcon           { return newIcon(thinIcon, "trademark-thin") }
func PiTrafficConeThin() icons.IsIcon         { return newIcon(thinIcon, "traffic-cone-thin") }
func PiTrafficSignThin() icons.IsIcon         { return newIcon(thinIcon, "traffic-sign-thin") }
func PiTrafficSignalThin() icons.IsIcon       { return newIcon(thinIcon, "traffic-signal-thin") }
func PiTrainRegionalThin() icons.IsIcon       { return newIcon(thinIcon, "train-regional-thin") }
func PiTrainSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "train-simple-thin") }
func PiTrainThin() icons.IsIcon               { return newIcon(thinIcon, "train-thin") }
func PiTramThin() icons.IsIcon                { return newIcon(thinIcon, "tram-thin") }
func PiTranslateThin() icons.IsIcon           { return newIcon(thinIcon, "translate-thin") }
func PiTrashSimpleThin() icons.IsIcon         { return newIcon(thinIcon, "trash-simple-thin") }
func PiTrashThin() icons.IsIcon               { return newIcon(thinIcon, "trash-thin") }
func PiTrayArrowDownThin() icons.IsIcon       { return newIcon(thinIcon, "tray-arrow-down-thin") }
func PiTrayArrowUpThin() icons.IsIcon         { return newIcon(thinIcon, "tray-arrow-up-thin") }
func PiTrayThin() icons.IsIcon                { return newIcon(thinIcon, "tray-thin") }
func PiTreasureChestThin() icons.IsIcon       { return newIcon(thinIcon, "treasure-chest-thin") }
func PiTreeEvergreenThin() icons.IsIcon       { return newIcon(thinIcon, "tree-evergreen-thin") }
func PiTreePalmThin() icons.IsIcon            { return newIcon(thinIcon, "tree-palm-thin") }
func PiTreeStructureThin() icons.IsIcon       { return newIcon(thinIcon, "tree-structure-thin") }
func PiTreeThin() icons.IsIcon                { return newIcon(thinIcon, "tree-thin") }
func PiTreeViewThin() icons.IsIcon            { return newIcon(thinIcon, "tree-view-thin") }
func PiTrendDownThin() icons.IsIcon           { return newIcon(thinIcon, "trend-down-thin") }
func PiTrendUpThin() icons.IsIcon             { return newIcon(thinIcon, "trend-up-thin") }
func PiTriangleDashedThin() icons.IsIcon      { return newIcon(thinIcon, "triangle-dashed-thin") }
func PiTriangleThin() icons.IsIcon            { return newIcon(thinIcon, "triangle-thin") }
func PiTrolleySuitcaseThin() icons.IsIcon     { return newIcon(thinIcon, "trolley-suitcase-thin") }
func PiTrolleyThin() icons.IsIcon             { return newIcon(thinIcon, "trolley-thin") }
func PiTrophyThin() icons.IsIcon              { return newIcon(thinIcon, "trophy-thin") }
func PiTruckThin() icons.IsIcon               { return newIcon(thinIcon, "truck-thin") }
func PiTruckTrailerThin() icons.IsIcon        { return newIcon(thinIcon, "truck-trailer-thin") }
func PiTumblrLogoThin() icons.IsIcon          { return newIcon(thinIcon, "tumblr-logo-thin") }
func PiTwitchLogoThin() icons.IsIcon          { return newIcon(thinIcon, "twitch-logo-thin") }
func PiTwitterLogoThin() icons.IsIcon         { return newIcon(thinIcon, "twitter-logo-thin") }
func PiUmbrellaSimpleThin() icons.IsIcon      { return newIcon(thinIcon, "umbrella-simple-thin") }
func PiUmbrellaThin() icons.IsIcon            { return newIcon(thinIcon, "umbrella-thin") }
func PiUnionThin() icons.IsIcon               { return newIcon(thinIcon, "union-thin") }
func PiUniteSquareThin() icons.IsIcon         { return newIcon(thinIcon, "unite-square-thin") }
func PiUniteThin() icons.IsIcon               { return newIcon(thinIcon, "unite-thin") }
func PiUploadSimpleThin() icons.IsIcon        { return newIcon(thinIcon, "upload-simple-thin") }
func PiUploadThin() icons.IsIcon              { return newIcon(thinIcon, "upload-thin") }
func PiUsbThin() icons.IsIcon                 { return newIcon(thinIcon, "usb-thin") }
func PiUserCheckThin() icons.IsIcon           { return newIcon(thinIcon, "user-check-thin") }
func PiUserCircleCheckThin() icons.IsIcon     { return newIcon(thinIcon, "user-circle-check-thin") }
func PiUserCircleDashedThin() icons.IsIcon    { return newIcon(thinIcon, "user-circle-dashed-thin") }
func PiUserCircleGearThin() icons.IsIcon      { return newIcon(thinIcon, "user-circle-gear-thin") }
func PiUserCircleMinusThin() icons.IsIcon     { return newIcon(thinIcon, "user-circle-minus-thin") }
func PiUserCirclePlusThin() icons.IsIcon      { return newIcon(thinIcon, "user-circle-plus-thin") }
func PiUserCircleThin() icons.IsIcon          { return newIcon(thinIcon, "user-circle-thin") }
func PiUserFocusThin() icons.IsIcon           { return newIcon(thinIcon, "user-focus-thin") }
func PiUserGearThin() icons.IsIcon            { return newIcon(thinIcon, "user-gear-thin") }
func PiUserListThin() icons.IsIcon            { return newIcon(thinIcon, "user-list-thin") }
func PiUserMinusThin() icons.IsIcon           { return newIcon(thinIcon, "user-minus-thin") }
func PiUserPlusThin() icons.IsIcon            { return newIcon(thinIcon, "user-plus-thin") }
func PiUserRectangleThin() icons.IsIcon       { return newIcon(thinIcon, "user-rectangle-thin") }
func PiUserSoundThin() icons.IsIcon           { return newIcon(thinIcon, "user-sound-thin") }
func PiUserSquareThin() icons.IsIcon          { return newIcon(thinIcon, "user-square-thin") }
func PiUserSwitchThin() icons.IsIcon          { return newIcon(thinIcon, "user-switch-thin") }
func PiUserThin() icons.IsIcon                { return newIcon(thinIcon, "user-thin") }
func PiUsersFourThin() icons.IsIcon           { return newIcon(thinIcon, "users-four-thin") }
func PiUsersThin() icons.IsIcon               { return newIcon(thinIcon, "users-thin") }
func PiUsersThreeThin() icons.IsIcon          { return newIcon(thinIcon, "users-three-thin") }
func PiVanThin() icons.IsIcon                 { return newIcon(thinIcon, "van-thin") }
func PiVaultThin() icons.IsIcon               { return newIcon(thinIcon, "vault-thin") }
func PiVectorThreeThin() icons.IsIcon         { return newIcon(thinIcon, "vector-three-thin") }
func PiVectorTwoThin() icons.IsIcon           { return newIcon(thinIcon, "vector-two-thin") }
func PiVibrateThin() icons.IsIcon             { return newIcon(thinIcon, "vibrate-thin") }
func PiVideoCameraSlashThin() icons.IsIcon    { return newIcon(thinIcon, "video-camera-slash-thin") }
func PiVideoCameraThin() icons.IsIcon         { return newIcon(thinIcon, "video-camera-thin") }
func PiVideoConferenceThin() icons.IsIcon     { return newIcon(thinIcon, "video-conference-thin") }
func PiVideoThin() icons.IsIcon               { return newIcon(thinIcon, "video-thin") }
func PiVignetteThin() icons.IsIcon            { return newIcon(thinIcon, "vignette-thin") }
func PiVinylRecordThin() icons.IsIcon         { return newIcon(thinIcon, "vinyl-record-thin") }
func PiVirtualRealityThin() icons.IsIcon      { return newIcon(thinIcon, "virtual-reality-thin") }
func PiVirusThin() icons.IsIcon               { return newIcon(thinIcon, "virus-thin") }
func PiVisorThin() icons.IsIcon               { return newIcon(thinIcon, "visor-thin") }
func PiVoicemailThin() icons.IsIcon           { return newIcon(thinIcon, "voicemail-thin") }
func PiVolleyballThin() icons.IsIcon          { return newIcon(thinIcon, "volleyball-thin") }
func PiWallThin() icons.IsIcon                { return newIcon(thinIcon, "wall-thin") }
func PiWalletThin() icons.IsIcon              { return newIcon(thinIcon, "wallet-thin") }
func PiWarehouseThin() icons.IsIcon           { return newIcon(thinIcon, "warehouse-thin") }
func PiWarningCircleThin() icons.IsIcon       { return newIcon(thinIcon, "warning-circle-thin") }
func PiWarningDiamondThin() icons.IsIcon      { return newIcon(thinIcon, "warning-diamond-thin") }
func PiWarningOctagonThin() icons.IsIcon      { return newIcon(thinIcon, "warning-octagon-thin") }
func PiWarningThin() icons.IsIcon             { return newIcon(thinIcon, "warning-thin") }
func PiWashingMachineThin() icons.IsIcon      { return newIcon(thinIcon, "washing-machine-thin") }
func PiWatchThin() icons.IsIcon               { return newIcon(thinIcon, "watch-thin") }
func PiWaveSawtoothThin() icons.IsIcon        { return newIcon(thinIcon, "wave-sawtooth-thin") }
func PiWaveSineThin() icons.IsIcon            { return newIcon(thinIcon, "wave-sine-thin") }
func PiWaveSquareThin() icons.IsIcon          { return newIcon(thinIcon, "wave-square-thin") }
func PiWaveTriangleThin() icons.IsIcon        { return newIcon(thinIcon, "wave-triangle-thin") }
func PiWaveformSlashThin() icons.IsIcon       { return newIcon(thinIcon, "waveform-slash-thin") }
func PiWaveformThin() icons.IsIcon            { return newIcon(thinIcon, "waveform-thin") }
func PiWavesThin() icons.IsIcon               { return newIcon(thinIcon, "waves-thin") }
func PiWebcamSlashThin() icons.IsIcon         { return newIcon(thinIcon, "webcam-slash-thin") }
func PiWebcamThin() icons.IsIcon              { return newIcon(thinIcon, "webcam-thin") }
func PiWebhooksLogoThin() icons.IsIcon        { return newIcon(thinIcon, "webhooks-logo-thin") }
func PiWechatLogoThin() icons.IsIcon          { return newIcon(thinIcon, "wechat-logo-thin") }
func PiWhatsappLogoThin() icons.IsIcon        { return newIcon(thinIcon, "whatsapp-logo-thin") }
func PiWheelchairMotionThin() icons.IsIcon    { return newIcon(thinIcon, "wheelchair-motion-thin") }
func PiWheelchairThin() icons.IsIcon          { return newIcon(thinIcon, "wheelchair-thin") }
func PiWifiHighThin() icons.IsIcon            { return newIcon(thinIcon, "wifi-high-thin") }
func PiWifiLowThin() icons.IsIcon             { return newIcon(thinIcon, "wifi-low-thin") }
func PiWifiMediumThin() icons.IsIcon          { return newIcon(thinIcon, "wifi-medium-thin") }
func PiWifiNoneThin() icons.IsIcon            { return newIcon(thinIcon, "wifi-none-thin") }
func PiWifiSlashThin() icons.IsIcon           { return newIcon(thinIcon, "wifi-slash-thin") }
func PiWifiXThin() icons.IsIcon               { return newIcon(thinIcon, "wifi-x-thin") }
func PiWindThin() icons.IsIcon                { return newIcon(thinIcon, "wind-thin") }
func PiWindmillThin() icons.IsIcon            { return newIcon(thinIcon, "windmill-thin") }
func PiWindowsLogoThin() icons.IsIcon         { return newIcon(thinIcon, "windows-logo-thin") }
func PiWineThin() icons.IsIcon                { return newIcon(thinIcon, "wine-thin") }
func PiWrenchThin() icons.IsIcon              { return newIcon(thinIcon, "wrench-thin") }
func PiXCircleThin() icons.IsIcon             { return newIcon(thinIcon, "x-circle-thin") }
func PiXLogoThin() icons.IsIcon               { return newIcon(thinIcon, "x-logo-thin") }
func PiXSquareThin() icons.IsIcon             { return newIcon(thinIcon, "x-square-thin") }
func PiXThin() icons.IsIcon                   { return newIcon(thinIcon, "x-thin") }
func PiYarnThin() icons.IsIcon                { return newIcon(thinIcon, "yarn-thin") }
func PiYinYangThin() icons.IsIcon             { return newIcon(thinIcon, "yin-yang-thin") }
func PiYoutubeLogoThin() icons.IsIcon         { return newIcon(thinIcon, "youtube-logo-thin") }
